
-----------------orx_f_formulary_claim_xrfe-------------------
{
  "final_table_schema": "{\"rx_nbr\": \"string\", \"client_id\": \"string\", \"carrier_id\": \"string\", \"account_id\": \"string\", \"employer_group_id\": \"string\", \"mbr_id\": \"string\", \"fill_nbr\": \"string\", \"txn_cd\": \"string\", \"carrier_sk\": \"long\", \"cag_sk\": \"long\", \"mbr_sk\": \"long\", \"client_xrfe_sk\": \"long\", \"client_desc\": \"string\", \"mb_first_nm\": \"string\", \"mb_last_nm\": \"string\", \"mbr_sex\": \"string\", \"client_unique_claim_nbr\": \"string\", \"mbr_dt_of_brth\": \"date\", \"card_holder_id\": \"string\", \"patient_rel_cd\": \"string\", \"patient_first_nm\": \"string\", \"patient_last_nm\": \"string\", \"patient_dt_of_brth\": \"date\", \"patient_sex\": \"string\", \"map_file\": \"string\", \"srvc_prov_id\": \"string\", \"dt_of_srvc\": \"date\", \"pers_cd\": \"string\", \"prod_sk\": \"long\", \"prod_id\": \"string\", \"prod_id_qlfr_cd\": \"string\", \"ndc\": \"string\", \"gpi_sk\": \"long\", \"gpi_id\": \"string\", \"prod_nm\": \"string\", \"formulary_protocol_ind\": \"string\", \"tier_level\": \"int\", \"days_sply\": \"int\", \"disp_qty\": \"decimal(11, 3)\", \"src_env_sk\": \"long\", \"rx_nbr_encrp\": \"string\", \"sec_flg\": \"double\", \"rec_stat_cd\": \"short\", \"run_id\": \"long\", \"update_uid\": \"string\", \"update_ts\": \"timestamp\", \"insert_uid\": \"string\", \"insert_ts\": \"timestamp\"}",
  "pipeline_name": "orx_f_formulary_claim_xrfe",
  "primary_key": "rx_nbr,client_id,carrier_id,account_id,employer_group_id,mbr_id,fill_nbr,txn_cd,client_desc,mb_first_nm,mb_last_nm,mbr_sex,client_unique_claim_nbr,mbr_dt_of_brth,card_holder_id,patient_rel_cd,patient_first_nm,patient_last_nm,patient_dt_of_brth,patient_sex,map_file,srvc_prov_id,dt_of_srvc,pers_cd,prod_id,prod_id_qlfr_cd,ndc,gpi_id,prod_nm,formulary_protocol_ind,tier_level,days_sply,disp_qty,src_env_sk",
  "reformat_rules": "{\n  \"patient_dt_of_brth\": \"coalesce(CASE WHEN (array_contains(array(3, 4, 5, 6, 7), length(trim(CAST(dqaldt AS STRING)))) AND (NOT (to_timestamp(trim(CAST((19000000 + CAST(trim(CAST(dqaldt AS STRING)) AS DECIMAL)) AS STRING)), 'yyyyMMdd') IS NULL))) THEN date_format(to_date(trim(CAST((19000000 + CAST(trim(CAST(dqaldt AS STRING)) AS DECIMAL)) AS STRING)), 'yyyyMMdd'), 'yyyy-MM-dd') END, CASE WHEN (array_contains(array(8), length(trim(CAST(dqaldt AS STRING)))) AND (NOT (to_timestamp(trim(CAST(dqaldt AS STRING)), 'yyyyMMdd') IS NULL))) THEN date_format(to_date(trim(CAST(dqaldt AS STRING)), 'yyyyMMdd'), 'yyyy-MM-dd') END, date_format(to_date('19000101', 'yyyyMMdd'), 'yyyy-MM-dd'))\",\n  \"map_file\": \"mapfil\",\n  \"ndc\": \"ndc\",\n  \"cag_sk\": \"in1_cag_sk\",\n  \"prod_id\": \"dqric4\",\n  \"days_sply\": \"CAST(dqimnb AS DECIMAL(38,0))\",\n  \"prod_id_qlfr_cd\": \"dqhtcj\",\n  \"gpi_id\": \"gpi\",\n  \"mbr_id\": \"coalesce(ababcd, '-')\",\n  \"pers_cd\": \"riolcd\",\n  \"prod_nm\": \"prodname\",\n  \"client_xrfe_sk\": \"in1_client_xrfe_sk\",\n  \"sec_flg\": \"0\",\n  \"mb_first_nm\": \"abartx\",\n  \"prod_sk\": \"in1_prod_sk\",\n  \"mbr_sk\": \"in1_mbr_sk\",\n  \"patient_sex\": \"dqkxst\",\n  \"client_id\": \"clientid\",\n  \"carrier_sk\": \"in1_carrier_sk\",\n  \"srvc_prov_id\": \"dqujcd\",\n  \"rx_nbr_encrp\": \"ff3_encrypt_idwdata(CAST(dqukcd AS STRING))\",\n  \"account_id\": \"coalesce(abaccd, '-')\",\n  \"mb_last_nm\": \"abaqtx\",\n  \"card_holder_id\": \"riokcd\",\n  \"txn_cd\": \"riksst\",\n  \"mbr_dt_of_brth\": \"coalesce(CASE WHEN (array_contains(array(3, 4, 5, 6, 7), length(trim(CAST(abajdt AS STRING)))) AND (NOT (to_timestamp(trim(CAST((19000000 + CAST(trim(CAST(abajdt AS STRING)) AS DECIMAL)) AS STRING)), 'yyyyMMdd') IS NULL))) THEN date_format(to_date(trim(CAST((19000000 + CAST(trim(CAST(abajdt AS STRING)) AS DECIMAL)) AS STRING)), 'yyyyMMdd'), 'yyyy-MM-dd') END, CASE WHEN (array_contains(array(8), length(trim(CAST(abajdt AS STRING)))) AND (NOT (to_timestamp(trim(CAST(abajdt AS STRING)), 'yyyyMMdd') IS NULL))) THEN date_format(to_date(trim(CAST(abajdt AS STRING)), 'yyyyMMdd'), 'yyyy-MM-dd') END, date_format(to_date('19000101', 'yyyyMMdd'), 'yyyy-MM-dd'))\",\n  \"patient_rel_cd\": \"rikyst\",\n  \"gpi_sk\": \"in1_gpi_sk\",\n  \"carrier_id\": \"coalesce(abaacd, '-')\",\n  \"dt_of_srvc\": \"coalesce(CASE WHEN (array_contains(array(3, 4, 5, 6, 7), length(trim(CAST(dqbbda AS STRING)))) AND (NOT (to_timestamp(trim(CAST((19000000 + CAST(trim(CAST(dqbbda AS STRING)) AS DECIMAL)) AS STRING)), 'yyyyMMdd') IS NULL))) THEN date_format(to_date(trim(CAST((19000000 + CAST(trim(CAST(dqbbda AS STRING)) AS DECIMAL)) AS STRING)), 'yyyyMMdd'), 'yyyy-MM-dd') END, CASE WHEN (array_contains(array(8), length(trim(CAST(dqbbda AS STRING)))) AND (NOT (to_timestamp(trim(CAST(dqbbda AS STRING)), 'yyyyMMdd') IS NULL))) THEN date_format(to_date(trim(CAST(dqbbda AS STRING)), 'yyyyMMdd'), 'yyyy-MM-dd') END, date_format(to_date('19000101', 'yyyyMMdd'), 'yyyy-MM-dd'))\",\n  \"tier_level\": \"CAST(rihahs AS DECIMAL(38,0))\",\n  \"fill_nbr\": \"dqulcd\",\n  \"mbr_sex\": \"coalesce(abaast, '-')\",\n  \"employer_group_id\": \"coalesce(abadcd, '-')\",\n  \"disp_qty\": \"dqionb\",\n  \"src_env_sk\": \"CAST(dxf_src_sys_id AS DECIMAL(38,0))\",\n  \"patient_first_nm\": \"dqk7tx\",\n  \"client_desc\": \"cidesc\",\n  \"client_unique_claim_nbr\": \"aaowij\",\n  \"formulary_protocol_ind\": \"rilqst\",\n  \"patient_last_nm\": \"dqk8tx\",\n  \"rx_nbr\": \"dqukcd\",\n  \"clientid\": \"clientid\",\n  \"gpi\": \"gpi\",\n  \"dqric4\": \"dqric4\",\n  \"abadcd\": \"abadcd\",\n  \"abaccd\": \"abaccd\",\n  \"ababcd\": \"ababcd\",\n  \"dqhtcj\": \"dqhtcj\",\n  \"abaacd\": \"abaacd\"\n}",
  "reformat_rules_join": "joins = [\n  {\n    \"fmt\": \"table\",\n    \"src\": \"orx_idw_dm_prd.d_cag\",\n    \"join-cond\": \"in1.carrier_id = coalesce(in0.abaacd, '-') AND in1.account_id = coalesce(in0.abaccd, '-') AND in1.employer_group_id = coalesce(in0.abadcd, '-')\",\n    \"val-cols\": [\n      \"in1.cag_sk as in1_cag_sk\"\n    ]\n  },\n  {\n    \"fmt\": \"table\",\n    \"src\": \"orx_idw_dm_prd.d_carrier\",\n    \"join-cond\": \"in1.carrier_id = coalesce(in0.abaacd, '-')\",\n    \"val-cols\": [\n      \"in1.carrier_sk as in1_carrier_sk\"\n    ]\n  },\n  {\n    \"fmt\": \"table\",\n    \"src\": \"orx_idw_dm_prd.d_gpi\",\n    \"join-cond\": \"in1.gpi_id = in0.gpi\",\n    \"val-cols\": [\n      \"in1.gpi_sk as in1_gpi_sk\"\n    ]\n  },\n  {\n    \"fmt\": \"table\",\n    \"src\": \"orx_idw_dm_prd.d_member\",\n    \"join-cond\": \"in1.carrier_id = coalesce(in0.abaacd, '-') AND in1.account_id = coalesce(in0.abaccd, '-') AND in1.employer_group_id = coalesce(in0.abadcd, '-') AND in1.mbr_id = coalesce(in0.ababcd, '-')\",\n    \"val-cols\": [\n      \"in1.mbr_sk as in1_mbr_sk\"\n    ]\n  },\n  {\n    \"fmt\": \"table\",\n    \"src\": \"orx_idw_dm_prd.d_product\",\n    \"join-cond\": \"in1.prod_id = in0.dqric4 AND in1.prod_id_qlfr_cd = in0.dqhtcj\",\n    \"val-cols\": [\n      \"in1.prod_sk as in1_prod_sk\"\n    ]\n  },\n  {\n    \"fmt\": \"table\",\n    \"src\": \"orx_idw_dm_prd.l_formulary_client_xrfe\",\n    \"join-cond\": \"in1.client_id = in0.clientid\",\n    \"val-cols\": [\n      \"in1.client_xrfe_sk as in1_client_xrfe_sk\"\n    ]\n  }\n]",
  "source_path": "srcs = [{\n    \"fmt\" : \"query\",\n    \"src\" : \"\"\n}]",
  "source_table": "",
  "target_table": "f_formulary_claim_xrfe",
  "encrypt_cols": "mb_first_nm,mb_last_nm,patient_first_nm,patient_last_nm",
  "encrypt_scope": "idwshared-dbscope",
  "read_incremental_files_flag": "false",
  "sk_service_self_join": "false",
  "optional_sk_config": "sks=[\n  {\n    \"table-name\": \"d_cag\",\n    \"sk-col\": \"cag_sk\",\n    \"nk-col\": [\n      \"coalesce(abaacd, '-')\",\n      \"coalesce(abaccd, '-')\",\n      \"coalesce(abadcd, '-')\"\n    ]\n  },\n  {\n    \"table-name\": \"d_carrier\",\n    \"sk-col\": \"carrier_sk\",\n    \"nk-col\": [\n      \"coalesce(abaacd, '-')\"\n    ]\n  },\n  {\n    \"table-name\": \"d_gpi\",\n    \"sk-col\": \"gpi_sk\",\n    \"nk-col\": [\n      \"gpi\"\n    ]\n  },\n  {\n    \"table-name\": \"d_member\",\n    \"sk-col\": \"mbr_sk\",\n    \"nk-col\": [\n      \"coalesce(abaacd, '-')\",\n      \"coalesce(abaccd, '-')\",\n      \"coalesce(abadcd, '-')\",\n      \"coalesce(ababcd, '-')\"\n    ]\n  },\n  {\n    \"table-name\": \"d_product\",\n    \"sk-col\": \"prod_sk\",\n    \"nk-col\": [\n      \"dqric4\",\n      \"dqhtcj\"\n    ]\n  },\n  {\n    \"table-name\": \"l_formulary_client_xrfe\",\n    \"sk-col\": \"client_xrfe_sk\",\n    \"nk-col\": [\n      \"clientid\"\n    ]\n  }\n]"
}
-----------------ctrx_f_formulary_claim_xrfe-------------------
{
  "final_table_schema": "{\"rx_nbr\": \"string\", \"client_id\": \"string\", \"carrier_id\": \"string\", \"account_id\": \"string\", \"employer_group_id\": \"string\", \"mbr_id\": \"string\", \"fill_nbr\": \"string\", \"txn_cd\": \"string\", \"carrier_sk\": \"long\", \"cag_sk\": \"long\", \"mbr_sk\": \"long\", \"client_xrfe_sk\": \"long\", \"client_desc\": \"string\", \"mb_first_nm\": \"string\", \"mb_last_nm\": \"string\", \"mbr_sex\": \"string\", \"client_unique_claim_nbr\": \"string\", \"mbr_dt_of_brth\": \"date\", \"card_holder_id\": \"string\", \"patient_rel_cd\": \"string\", \"patient_first_nm\": \"string\", \"patient_last_nm\": \"string\", \"patient_dt_of_brth\": \"date\", \"patient_sex\": \"string\", \"map_file\": \"string\", \"srvc_prov_id\": \"string\", \"dt_of_srvc\": \"date\", \"pers_cd\": \"string\", \"prod_sk\": \"long\", \"prod_id\": \"string\", \"prod_id_qlfr_cd\": \"string\", \"ndc\": \"string\", \"gpi_sk\": \"long\", \"gpi_id\": \"string\", \"prod_nm\": \"string\", \"formulary_protocol_ind\": \"string\", \"tier_level\": \"int\", \"days_sply\": \"int\", \"disp_qty\": \"decimal(11, 3)\", \"src_env_sk\": \"long\", \"rx_nbr_encrp\": \"string\", \"sec_flg\": \"double\", \"rec_stat_cd\": \"short\", \"run_id\": \"long\", \"update_uid\": \"string\", \"update_ts\": \"timestamp\", \"insert_uid\": \"string\", \"insert_ts\": \"timestamp\"}",
  "pipeline_name": "ctrx_f_formulary_claim_xrfe",
  "primary_key": "rx_nbr,client_id,carrier_id,account_id,employer_group_id,mbr_id,fill_nbr,txn_cd,client_desc,mb_first_nm,mb_last_nm,mbr_sex,client_unique_claim_nbr,mbr_dt_of_brth,card_holder_id,patient_rel_cd,patient_first_nm,patient_last_nm,patient_dt_of_brth,patient_sex,map_file,srvc_prov_id,dt_of_srvc,pers_cd,prod_id,prod_id_qlfr_cd,ndc,gpi_id,prod_nm,formulary_protocol_ind,tier_level,days_sply,disp_qty,src_env_sk",
  "reformat_rules": "{\n  \"patient_dt_of_brth\": \"coalesce(CASE WHEN (array_contains(array(3, 4, 5, 6, 7), length(trim(CAST(dqaldt AS STRING)))) AND (NOT (to_timestamp(trim(CAST((19000000 + CAST(trim(CAST(dqaldt AS STRING)) AS DECIMAL)) AS STRING)), 'yyyyMMdd') IS NULL))) THEN date_format(to_date(trim(CAST((19000000 + CAST(trim(CAST(dqaldt AS STRING)) AS DECIMAL)) AS STRING)), 'yyyyMMdd'), 'yyyy-MM-dd') END, CASE WHEN (array_contains(array(8), length(trim(CAST(dqaldt AS STRING)))) AND (NOT (to_timestamp(trim(CAST(dqaldt AS STRING)), 'yyyyMMdd') IS NULL))) THEN date_format(to_date(trim(CAST(dqaldt AS STRING)), 'yyyyMMdd'), 'yyyy-MM-dd') END, date_format(to_date('19000101', 'yyyyMMdd'), 'yyyy-MM-dd'))\",\n  \"map_file\": \"mapfil\",\n  \"ndc\": \"ndc\",\n  \"cag_sk\": \"in1_cag_sk\",\n  \"prod_id\": \"dqric4\",\n  \"days_sply\": \"CAST(dqimnb AS DECIMAL(38,0))\",\n  \"prod_id_qlfr_cd\": \"dqhtcj\",\n  \"gpi_id\": \"gpi\",\n  \"mbr_id\": \"coalesce(ababcd, '-')\",\n  \"pers_cd\": \"riolcd\",\n  \"prod_nm\": \"prodname\",\n  \"client_xrfe_sk\": \"in1_client_xrfe_sk\",\n  \"sec_flg\": \"0\",\n  \"mb_first_nm\": \"abartx\",\n  \"prod_sk\": \"in1_prod_sk\",\n  \"mbr_sk\": \"in1_mbr_sk\",\n  \"patient_sex\": \"dqkxst\",\n  \"client_id\": \"clientid\",\n  \"carrier_sk\": \"in1_carrier_sk\",\n  \"srvc_prov_id\": \"dqujcd\",\n  \"rx_nbr_encrp\": \"ff3_encrypt_idwdata(CAST(dqukcd AS STRING))\",\n  \"account_id\": \"coalesce(abaccd, '-')\",\n  \"mb_last_nm\": \"abaqtx\",\n  \"card_holder_id\": \"riokcd\",\n  \"txn_cd\": \"riksst\",\n  \"mbr_dt_of_brth\": \"coalesce(CASE WHEN (array_contains(array(3, 4, 5, 6, 7), length(trim(CAST(abajdt AS STRING)))) AND (NOT (to_timestamp(trim(CAST((19000000 + CAST(trim(CAST(abajdt AS STRING)) AS DECIMAL)) AS STRING)), 'yyyyMMdd') IS NULL))) THEN date_format(to_date(trim(CAST((19000000 + CAST(trim(CAST(abajdt AS STRING)) AS DECIMAL)) AS STRING)), 'yyyyMMdd'), 'yyyy-MM-dd') END, CASE WHEN (array_contains(array(8), length(trim(CAST(abajdt AS STRING)))) AND (NOT (to_timestamp(trim(CAST(abajdt AS STRING)), 'yyyyMMdd') IS NULL))) THEN date_format(to_date(trim(CAST(abajdt AS STRING)), 'yyyyMMdd'), 'yyyy-MM-dd') END, date_format(to_date('19000101', 'yyyyMMdd'), 'yyyy-MM-dd'))\",\n  \"patient_rel_cd\": \"rikyst\",\n  \"gpi_sk\": \"in1_gpi_sk\",\n  \"carrier_id\": \"coalesce(abaacd, '-')\",\n  \"dt_of_srvc\": \"coalesce(CASE WHEN (array_contains(array(3, 4, 5, 6, 7), length(trim(CAST(dqbbda AS STRING)))) AND (NOT (to_timestamp(trim(CAST((19000000 + CAST(trim(CAST(dqbbda AS STRING)) AS DECIMAL)) AS STRING)), 'yyyyMMdd') IS NULL))) THEN date_format(to_date(trim(CAST((19000000 + CAST(trim(CAST(dqbbda AS STRING)) AS DECIMAL)) AS STRING)), 'yyyyMMdd'), 'yyyy-MM-dd') END, CASE WHEN (array_contains(array(8), length(trim(CAST(dqbbda AS STRING)))) AND (NOT (to_timestamp(trim(CAST(dqbbda AS STRING)), 'yyyyMMdd') IS NULL))) THEN date_format(to_date(trim(CAST(dqbbda AS STRING)), 'yyyyMMdd'), 'yyyy-MM-dd') END, date_format(to_date('19000101', 'yyyyMMdd'), 'yyyy-MM-dd'))\",\n  \"tier_level\": \"CAST(rihahs AS DECIMAL(38,0))\",\n  \"fill_nbr\": \"dqulcd\",\n  \"mbr_sex\": \"coalesce(abaast, '-')\",\n  \"employer_group_id\": \"coalesce(abadcd, '-')\",\n  \"disp_qty\": \"dqionb\",\n  \"src_env_sk\": \"CAST(dxf_src_sys_id AS DECIMAL(38,0))\",\n  \"patient_first_nm\": \"dqk7tx\",\n  \"client_desc\": \"cidesc\",\n  \"client_unique_claim_nbr\": \"aaowij\",\n  \"formulary_protocol_ind\": \"rilqst\",\n  \"patient_last_nm\": \"dqk8tx\",\n  \"rx_nbr\": \"dqukcd\",\n  \"clientid\": \"clientid\",\n  \"gpi\": \"gpi\",\n  \"dqric4\": \"dqric4\",\n  \"abadcd\": \"abadcd\",\n  \"abaccd\": \"abaccd\",\n  \"ababcd\": \"ababcd\",\n  \"dqhtcj\": \"dqhtcj\",\n  \"abaacd\": \"abaacd\"\n}",
  "reformat_rules_join": "joins = [\n  {\n    \"fmt\": \"table\",\n    \"src\": \"orx_idw_dm_prd.d_cag\",\n    \"join-cond\": \"in1.carrier_id = coalesce(in0.abaacd, '-') AND in1.account_id = coalesce(in0.abaccd, '-') AND in1.employer_group_id = coalesce(in0.abadcd, '-')\",\n    \"val-cols\": [\n      \"in1.cag_sk as in1_cag_sk\"\n    ]\n  },\n  {\n    \"fmt\": \"table\",\n    \"src\": \"orx_idw_dm_prd.d_carrier\",\n    \"join-cond\": \"in1.carrier_id = coalesce(in0.abaacd, '-')\",\n    \"val-cols\": [\n      \"in1.carrier_sk as in1_carrier_sk\"\n    ]\n  },\n  {\n    \"fmt\": \"table\",\n    \"src\": \"orx_idw_dm_prd.d_gpi\",\n    \"join-cond\": \"in1.gpi_id = in0.gpi\",\n    \"val-cols\": [\n      \"in1.gpi_sk as in1_gpi_sk\"\n    ]\n  },\n  {\n    \"fmt\": \"table\",\n    \"src\": \"orx_idw_dm_prd.d_member\",\n    \"join-cond\": \"in1.carrier_id = coalesce(in0.abaacd, '-') AND in1.account_id = coalesce(in0.abaccd, '-') AND in1.employer_group_id = coalesce(in0.abadcd, '-') AND in1.mbr_id = coalesce(in0.ababcd, '-')\",\n    \"val-cols\": [\n      \"in1.mbr_sk as in1_mbr_sk\"\n    ]\n  },\n  {\n    \"fmt\": \"table\",\n    \"src\": \"orx_idw_dm_prd.d_product\",\n    \"join-cond\": \"in1.prod_id = in0.dqric4 AND in1.prod_id_qlfr_cd = in0.dqhtcj\",\n    \"val-cols\": [\n      \"in1.prod_sk as in1_prod_sk\"\n    ]\n  },\n  {\n    \"fmt\": \"table\",\n    \"src\": \"orx_idw_dm_prd.l_formulary_client_xrfe\",\n    \"join-cond\": \"in1.client_id = in0.clientid\",\n    \"val-cols\": [\n      \"in1.client_xrfe_sk as in1_client_xrfe_sk\"\n    ]\n  }\n]",
  "source_path": "srcs = [{\n    \"fmt\" : \"query\",\n    \"src\" : \"\"\n}]",
  "source_table": "",
  "target_table": "f_formulary_claim_xrfe",
  "encrypt_cols": "mb_first_nm,mb_last_nm,patient_first_nm,patient_last_nm",
  "encrypt_scope": "idwshared-dbscope",
  "read_incremental_files_flag": "false",
  "sk_service_self_join": "false",
  "optional_sk_config": "sks=[\n  {\n    \"table-name\": \"d_cag\",\n    \"sk-col\": \"cag_sk\",\n    \"nk-col\": [\n      \"coalesce(abaacd, '-')\",\n      \"coalesce(abaccd, '-')\",\n      \"coalesce(abadcd, '-')\"\n    ]\n  },\n  {\n    \"table-name\": \"d_carrier\",\n    \"sk-col\": \"carrier_sk\",\n    \"nk-col\": [\n      \"coalesce(abaacd, '-')\"\n    ]\n  },\n  {\n    \"table-name\": \"d_gpi\",\n    \"sk-col\": \"gpi_sk\",\n    \"nk-col\": [\n      \"gpi\"\n    ]\n  },\n  {\n    \"table-name\": \"d_member\",\n    \"sk-col\": \"mbr_sk\",\n    \"nk-col\": [\n      \"coalesce(abaacd, '-')\",\n      \"coalesce(abaccd, '-')\",\n      \"coalesce(abadcd, '-')\",\n      \"coalesce(ababcd, '-')\"\n    ]\n  },\n  {\n    \"table-name\": \"d_product\",\n    \"sk-col\": \"prod_sk\",\n    \"nk-col\": [\n      \"dqric4\",\n      \"dqhtcj\"\n    ]\n  },\n  {\n    \"table-name\": \"l_formulary_client_xrfe\",\n    \"sk-col\": \"client_xrfe_sk\",\n    \"nk-col\": [\n      \"clientid\"\n    ]\n  }\n]"
}
-----------------ctrx_d_member_formulary_xref-------------------
{
  "default_source_blank_nulls": "abaacd, abaccd, abadcd",
  "final_table_schema": "{\"mbr_frmlry_sk\": \"long\", \"carrier_id\": \"string\", \"account_id\": \"string\", \"employer_group_id\": \"string\", \"mbr_id\": \"string\", \"mbr_prsn_cd\": \"string\", \"mbr_relshp_cd\": \"string\", \"mb_first_nm\": \"string\", \"mb_last_nm\": \"string\", \"mbr_dt_of_brth\": \"date\", \"client_id\": \"string\", \"formulary_mbr_id\": \"string\", \"job_nm\": \"string\", \"job_usr\": \"string\", \"job_nbr\": \"long\", \"src_add_dt\": \"date\", \"src_env_sk\": \"long\", \"mbr_sk\": \"double\", \"cag_sk\": \"double\", \"carrier_sk\": \"double\", \"sec_flg\": \"double\", \"rec_stat_cd\": \"short\", \"run_id\": \"long\", \"update_uid\": \"string\", \"update_ts\": \"timestamp\", \"insert_uid\": \"string\", \"insert_ts\": \"timestamp\"}",
  "pipeline_name": "ctrx_d_member_formulary_xref",
  "primary_key": "carrier_id,account_id,employer_group_id,mbr_id",
  "reformat_rules": "{\n  \"mbr_relshp_cd\": \"rikyst\",\n  \"job_nbr\": \"CAST(jobnbr AS DECIMAL(38,0))\",\n  \"cag_sk\": \"in1_cag_sk\",\n  \"mbr_id\": \"ababcd\",\n  \"mbr_prsn_cd\": \"riolcd\",\n  \"job_usr\": \"jobusr\",\n  \"sec_flg\": \"0\",\n  \"mb_first_nm\": \"dqk7tx\",\n  \"mbr_sk\": \"in1_mbr_sk\",\n  \"client_id\": \"clientid\",\n  \"job_nm\": \"jobnam\",\n  \"carrier_sk\": \"in1_carrier_sk\",\n  \"src_add_dt\": \"date_format(to_timestamp(substring(adddat, 1, 20), 'yyyy-MM-dd HH:mm:ss.'), 'yyyyMMdd')\",\n  \"account_id\": \"abaccd\",\n  \"mb_last_nm\": \"dqk8tx\",\n  \"mbr_dt_of_brth\": \"coalesce(CASE WHEN (array_contains(array(3, 4, 5, 6, 7), length(trim(CAST(dqaldt AS STRING)))) AND (NOT (to_timestamp(trim(CAST((19000000 + CAST(trim(CAST(dqaldt AS STRING)) AS DECIMAL)) AS STRING)), 'yyyyMMdd') IS NULL))) THEN date_format(to_date(trim(CAST((19000000 + CAST(trim(CAST(dqaldt AS STRING)) AS DECIMAL)) AS STRING)), 'yyyyMMdd'), 'yyyy-MM-dd') END, CASE WHEN (array_contains(array(8), length(trim(CAST(dqaldt AS STRING)))) AND (NOT (to_timestamp(trim(CAST(dqaldt AS STRING)), 'yyyyMMdd') IS NULL))) THEN date_format(to_date(trim(CAST(dqaldt AS STRING)), 'yyyyMMdd'), 'yyyy-MM-dd') END, date_format(to_date('19000101', 'yyyyMMdd'), 'yyyy-MM-dd'))\",\n  \"formulary_mbr_id\": \"dqs5cd\",\n  \"carrier_id\": \"abaacd\",\n  \"mbr_frmlry_sk\": \"-1\",\n  \"employer_group_id\": \"abadcd\",\n  \"src_env_sk\": \"CAST(dxf_src_sys_id AS DECIMAL(38,0))\",\n  \"abadcd\": \"abadcd\",\n  \"abaccd\": \"abaccd\",\n  \"abaacd\": \"abaacd\",\n  \"ababcd\": \"ababcd\"\n}",
  "reformat_rules_join": "joins = [\n  {\n    \"fmt\": \"table\",\n    \"src\": \"orx_idw_dm_prd.d_cag\",\n    \"join-cond\": \"in1.carrier_id = CASE WHEN ((in0.abaacd IS NULL) = 1) THEN '-' WHEN coalesce((CASE WHEN (trim(in0.abaacd) IS NULL) THEN NULL ELSE (length(trim(trim(in0.abaacd))) = 0) END = 1), CAST(0 AS BOOLEAN)) THEN '-' ELSE in0.abaacd END AND in1.account_id = CASE WHEN ((in0.abaccd IS NULL) = 1) THEN '-' WHEN coalesce((CASE WHEN (trim(in0.abaccd) IS NULL) THEN NULL ELSE (length(trim(trim(in0.abaccd))) = 0) END = 1), CAST(0 AS BOOLEAN)) THEN '-' ELSE in0.abaccd END AND in1.employer_group_id = CASE WHEN ((in0.abadcd IS NULL) = 1) THEN '-' WHEN coalesce((CASE WHEN (trim(in0.abadcd) IS NULL) THEN NULL ELSE (length(trim(trim(in0.abadcd))) = 0) END = 1), CAST(0 AS BOOLEAN)) THEN '-' ELSE in0.abadcd END\",\n    \"val-cols\": [\n      \"in1.cag_sk as in1_cag_sk\"\n    ]\n  },\n  {\n    \"fmt\": \"table\",\n    \"src\": \"orx_idw_dm_prd.d_carrier\",\n    \"join-cond\": \"in1.carrier_id = CASE WHEN ((in0.abaacd IS NULL) = 1) THEN '-' WHEN coalesce((CASE WHEN (trim(in0.abaacd) IS NULL) THEN NULL ELSE (length(trim(trim(in0.abaacd))) = 0) END = 1), CAST(0 AS BOOLEAN)) THEN '-' ELSE in0.abaacd END\",\n    \"val-cols\": [\n      \"in1.carrier_sk as in1_carrier_sk\"\n    ]\n  },\n  {\n    \"fmt\": \"table\",\n    \"src\": \"orx_idw_dm_prd.d_member\",\n    \"join-cond\": \"in1.carrier_id = CASE WHEN ((in0.abaacd IS NULL) = 1) THEN '-' WHEN coalesce((CASE WHEN (trim(in0.abaacd) IS NULL) THEN NULL ELSE (length(trim(trim(in0.abaacd))) = 0) END = 1), CAST(0 AS BOOLEAN)) THEN '-' ELSE in0.abaacd END AND in1.account_id = CASE WHEN ((in0.abaccd IS NULL) = 1) THEN '-' WHEN coalesce((CASE WHEN (trim(in0.abaccd) IS NULL) THEN NULL ELSE (length(trim(trim(in0.abaccd))) = 0) END = 1), CAST(0 AS BOOLEAN)) THEN '-' ELSE in0.abaccd END AND in1.employer_group_id = CASE WHEN ((in0.abadcd IS NULL) = 1) THEN '-' WHEN coalesce((CASE WHEN (trim(in0.abadcd) IS NULL) THEN NULL ELSE (length(trim(trim(in0.abadcd))) = 0) END = 1), CAST(0 AS BOOLEAN)) THEN '-' ELSE in0.abadcd END AND in1.mbr_id = CASE WHEN ((in0.ababcd IS NULL) = 1) THEN '-' WHEN coalesce((CASE WHEN (trim(in0.ababcd) IS NULL) THEN NULL ELSE (length(trim(trim(in0.ababcd))) = 0) END = 1), CAST(0 AS BOOLEAN)) THEN '-' ELSE in0.ababcd END\",\n    \"val-cols\": [\n      \"in1.mbr_sk as in1_mbr_sk\"\n    ]\n  }\n]",
  "source_path": "srcs = [{\n    \"fmt\" : \"query\",\n    \"src\" : \"\"\n}]",
  "source_table": "",
  "target_table": "d_member_formulary_xref",
  "encrypt_cols": "mb_first_nm,mb_last_nm",
  "encrypt_scope": "idwshared-dbscope",
  "sk_service_col": "mbr_frmlry_sk",
  "read_incremental_files_flag": "false",
  "optional_sk_config": "sks=[\n  {\n    \"table-name\": \"d_cag\",\n    \"sk-col\": \"cag_sk\",\n    \"nk-col\": [\n      \"CASE WHEN ((abaacd IS NULL) = 1) THEN '-' WHEN coalesce((CASE WHEN (trim(abaacd) IS NULL) THEN NULL ELSE (length(trim(trim(abaacd))) = 0) END = 1), CAST(0 AS BOOLEAN)) THEN '-' ELSE abaacd END\",\n      \"CASE WHEN ((abaccd IS NULL) = 1) THEN '-' WHEN coalesce((CASE WHEN (trim(abaccd) IS NULL) THEN NULL ELSE (length(trim(trim(abaccd))) = 0) END = 1), CAST(0 AS BOOLEAN)) THEN '-' ELSE abaccd END\",\n      \"CASE WHEN ((abadcd IS NULL) = 1) THEN '-' WHEN coalesce((CASE WHEN (trim(abadcd) IS NULL) THEN NULL ELSE (length(trim(trim(abadcd))) = 0) END = 1), CAST(0 AS BOOLEAN)) THEN '-' ELSE abadcd END\"\n    ]\n  },\n  {\n    \"table-name\": \"d_carrier\",\n    \"sk-col\": \"carrier_sk\",\n    \"nk-col\": [\n      \"CASE WHEN ((abaacd IS NULL) = 1) THEN '-' WHEN coalesce((CASE WHEN (trim(abaacd) IS NULL) THEN NULL ELSE (length(trim(trim(abaacd))) = 0) END = 1), CAST(0 AS BOOLEAN)) THEN '-' ELSE abaacd END\"\n    ]\n  },\n  {\n    \"table-name\": \"d_member\",\n    \"sk-col\": \"mbr_sk\",\n    \"nk-col\": [\n      \"CASE WHEN ((abaacd IS NULL) = 1) THEN '-' WHEN coalesce((CASE WHEN (trim(abaacd) IS NULL) THEN NULL ELSE (length(trim(trim(abaacd))) = 0) END = 1), CAST(0 AS BOOLEAN)) THEN '-' ELSE abaacd END\",\n      \"CASE WHEN ((abaccd IS NULL) = 1) THEN '-' WHEN coalesce((CASE WHEN (trim(abaccd) IS NULL) THEN NULL ELSE (length(trim(trim(abaccd))) = 0) END = 1), CAST(0 AS BOOLEAN)) THEN '-' ELSE abaccd END\",\n      \"CASE WHEN ((abadcd IS NULL) = 1) THEN '-' WHEN coalesce((CASE WHEN (trim(abadcd) IS NULL) THEN NULL ELSE (length(trim(trim(abadcd))) = 0) END = 1), CAST(0 AS BOOLEAN)) THEN '-' ELSE abadcd END\",\n      \"CASE WHEN ((ababcd IS NULL) = 1) THEN '-' WHEN coalesce((CASE WHEN (trim(ababcd) IS NULL) THEN NULL ELSE (length(trim(trim(ababcd))) = 0) END = 1), CAST(0 AS BOOLEAN)) THEN '-' ELSE ababcd END\"\n    ]\n  }\n]"
}
-----------------orx_d_member_formulary_xref-------------------
{
  "default_source_blank_nulls": "abaacd, abaccd, abadcd",
  "final_table_schema": "{\"mbr_frmlry_sk\": \"long\", \"carrier_id\": \"string\", \"account_id\": \"string\", \"employer_group_id\": \"string\", \"mbr_id\": \"string\", \"mbr_prsn_cd\": \"string\", \"mbr_relshp_cd\": \"string\", \"mb_first_nm\": \"string\", \"mb_last_nm\": \"string\", \"mbr_dt_of_brth\": \"date\", \"client_id\": \"string\", \"formulary_mbr_id\": \"string\", \"job_nm\": \"string\", \"job_usr\": \"string\", \"job_nbr\": \"long\", \"src_add_dt\": \"date\", \"src_env_sk\": \"long\", \"mbr_sk\": \"double\", \"cag_sk\": \"double\", \"carrier_sk\": \"double\", \"sec_flg\": \"double\", \"rec_stat_cd\": \"short\", \"run_id\": \"long\", \"update_uid\": \"string\", \"update_ts\": \"timestamp\", \"insert_uid\": \"string\", \"insert_ts\": \"timestamp\"}",
  "pipeline_name": "orx_d_member_formulary_xref",
  "primary_key": "carrier_id,account_id,employer_group_id,mbr_id",
  "reformat_rules": "{\n  \"mbr_relshp_cd\": \"rikyst\",\n  \"job_nbr\": \"CAST(jobnbr AS DECIMAL(38,0))\",\n  \"cag_sk\": \"in1_cag_sk\",\n  \"mbr_id\": \"ababcd\",\n  \"mbr_prsn_cd\": \"riolcd\",\n  \"job_usr\": \"jobusr\",\n  \"sec_flg\": \"0\",\n  \"mb_first_nm\": \"dqk7tx\",\n  \"mbr_sk\": \"in1_mbr_sk\",\n  \"client_id\": \"clientid\",\n  \"job_nm\": \"jobnam\",\n  \"carrier_sk\": \"in1_carrier_sk\",\n  \"src_add_dt\": \"date_format(to_timestamp(substring(adddat, 1, 20), 'yyyy-MM-dd HH:mm:ss.'), 'yyyyMMdd')\",\n  \"account_id\": \"abaccd\",\n  \"mb_last_nm\": \"dqk8tx\",\n  \"mbr_dt_of_brth\": \"coalesce(CASE WHEN (array_contains(array(3, 4, 5, 6, 7), length(trim(CAST(dqaldt AS STRING)))) AND (NOT (to_timestamp(trim(CAST((19000000 + CAST(trim(CAST(dqaldt AS STRING)) AS DECIMAL)) AS STRING)), 'yyyyMMdd') IS NULL))) THEN date_format(to_date(trim(CAST((19000000 + CAST(trim(CAST(dqaldt AS STRING)) AS DECIMAL)) AS STRING)), 'yyyyMMdd'), 'yyyy-MM-dd') END, CASE WHEN (array_contains(array(8), length(trim(CAST(dqaldt AS STRING)))) AND (NOT (to_timestamp(trim(CAST(dqaldt AS STRING)), 'yyyyMMdd') IS NULL))) THEN date_format(to_date(trim(CAST(dqaldt AS STRING)), 'yyyyMMdd'), 'yyyy-MM-dd') END, date_format(to_date('19000101', 'yyyyMMdd'), 'yyyy-MM-dd'))\",\n  \"formulary_mbr_id\": \"dqs5cd\",\n  \"carrier_id\": \"abaacd\",\n  \"mbr_frmlry_sk\": \"-1\",\n  \"employer_group_id\": \"abadcd\",\n  \"src_env_sk\": \"CAST(dxf_src_sys_id AS DECIMAL(38,0))\",\n  \"abadcd\": \"abadcd\",\n  \"abaccd\": \"abaccd\",\n  \"abaacd\": \"abaacd\",\n  \"ababcd\": \"ababcd\"\n}",
  "reformat_rules_join": "joins = [\n  {\n    \"fmt\": \"table\",\n    \"src\": \"orx_idw_dm_prd.d_cag\",\n    \"join-cond\": \"in1.carrier_id = CASE WHEN ((in0.abaacd IS NULL) = 1) THEN '-' WHEN coalesce((CASE WHEN (trim(in0.abaacd) IS NULL) THEN NULL ELSE (length(trim(trim(in0.abaacd))) = 0) END = 1), CAST(0 AS BOOLEAN)) THEN '-' ELSE in0.abaacd END AND in1.account_id = CASE WHEN ((in0.abaccd IS NULL) = 1) THEN '-' WHEN coalesce((CASE WHEN (trim(in0.abaccd) IS NULL) THEN NULL ELSE (length(trim(trim(in0.abaccd))) = 0) END = 1), CAST(0 AS BOOLEAN)) THEN '-' ELSE in0.abaccd END AND in1.employer_group_id = CASE WHEN ((in0.abadcd IS NULL) = 1) THEN '-' WHEN coalesce((CASE WHEN (trim(in0.abadcd) IS NULL) THEN NULL ELSE (length(trim(trim(in0.abadcd))) = 0) END = 1), CAST(0 AS BOOLEAN)) THEN '-' ELSE in0.abadcd END\",\n    \"val-cols\": [\n      \"in1.cag_sk as in1_cag_sk\"\n    ]\n  },\n  {\n    \"fmt\": \"table\",\n    \"src\": \"orx_idw_dm_prd.d_carrier\",\n    \"join-cond\": \"in1.carrier_id = CASE WHEN ((in0.abaacd IS NULL) = 1) THEN '-' WHEN coalesce((CASE WHEN (trim(in0.abaacd) IS NULL) THEN NULL ELSE (length(trim(trim(in0.abaacd))) = 0) END = 1), CAST(0 AS BOOLEAN)) THEN '-' ELSE in0.abaacd END\",\n    \"val-cols\": [\n      \"in1.carrier_sk as in1_carrier_sk\"\n    ]\n  },\n  {\n    \"fmt\": \"table\",\n    \"src\": \"orx_idw_dm_prd.d_member\",\n    \"join-cond\": \"in1.carrier_id = CASE WHEN ((in0.abaacd IS NULL) = 1) THEN '-' WHEN coalesce((CASE WHEN (trim(in0.abaacd) IS NULL) THEN NULL ELSE (length(trim(trim(in0.abaacd))) = 0) END = 1), CAST(0 AS BOOLEAN)) THEN '-' ELSE in0.abaacd END AND in1.account_id = CASE WHEN ((in0.abaccd IS NULL) = 1) THEN '-' WHEN coalesce((CASE WHEN (trim(in0.abaccd) IS NULL) THEN NULL ELSE (length(trim(trim(in0.abaccd))) = 0) END = 1), CAST(0 AS BOOLEAN)) THEN '-' ELSE in0.abaccd END AND in1.employer_group_id = CASE WHEN ((in0.abadcd IS NULL) = 1) THEN '-' WHEN coalesce((CASE WHEN (trim(in0.abadcd) IS NULL) THEN NULL ELSE (length(trim(trim(in0.abadcd))) = 0) END = 1), CAST(0 AS BOOLEAN)) THEN '-' ELSE in0.abadcd END AND in1.mbr_id = CASE WHEN ((in0.ababcd IS NULL) = 1) THEN '-' WHEN coalesce((CASE WHEN (trim(in0.ababcd) IS NULL) THEN NULL ELSE (length(trim(trim(in0.ababcd))) = 0) END = 1), CAST(0 AS BOOLEAN)) THEN '-' ELSE in0.ababcd END\",\n    \"val-cols\": [\n      \"in1.mbr_sk as in1_mbr_sk\"\n    ]\n  }\n]",
  "source_path": "srcs = [{\n    \"fmt\" : \"query\",\n    \"src\" : \"\"\n}]",
  "source_table": "",
  "target_table": "d_member_formulary_xref",
  "encrypt_cols": "mb_first_nm,mb_last_nm",
  "encrypt_scope": "idwshared-dbscope",
  "sk_service_col": "mbr_frmlry_sk",
  "read_incremental_files_flag": "false",
  "optional_sk_config": "sks=[\n  {\n    \"table-name\": \"d_cag\",\n    \"sk-col\": \"cag_sk\",\n    \"nk-col\": [\n      \"CASE WHEN ((abaacd IS NULL) = 1) THEN '-' WHEN coalesce((CASE WHEN (trim(abaacd) IS NULL) THEN NULL ELSE (length(trim(trim(abaacd))) = 0) END = 1), CAST(0 AS BOOLEAN)) THEN '-' ELSE abaacd END\",\n      \"CASE WHEN ((abaccd IS NULL) = 1) THEN '-' WHEN coalesce((CASE WHEN (trim(abaccd) IS NULL) THEN NULL ELSE (length(trim(trim(abaccd))) = 0) END = 1), CAST(0 AS BOOLEAN)) THEN '-' ELSE abaccd END\",\n      \"CASE WHEN ((abadcd IS NULL) = 1) THEN '-' WHEN coalesce((CASE WHEN (trim(abadcd) IS NULL) THEN NULL ELSE (length(trim(trim(abadcd))) = 0) END = 1), CAST(0 AS BOOLEAN)) THEN '-' ELSE abadcd END\"\n    ]\n  },\n  {\n    \"table-name\": \"d_carrier\",\n    \"sk-col\": \"carrier_sk\",\n    \"nk-col\": [\n      \"CASE WHEN ((abaacd IS NULL) = 1) THEN '-' WHEN coalesce((CASE WHEN (trim(abaacd) IS NULL) THEN NULL ELSE (length(trim(trim(abaacd))) = 0) END = 1), CAST(0 AS BOOLEAN)) THEN '-' ELSE abaacd END\"\n    ]\n  },\n  {\n    \"table-name\": \"d_member\",\n    \"sk-col\": \"mbr_sk\",\n    \"nk-col\": [\n      \"CASE WHEN ((abaacd IS NULL) = 1) THEN '-' WHEN coalesce((CASE WHEN (trim(abaacd) IS NULL) THEN NULL ELSE (length(trim(trim(abaacd))) = 0) END = 1), CAST(0 AS BOOLEAN)) THEN '-' ELSE abaacd END\",\n      \"CASE WHEN ((abaccd IS NULL) = 1) THEN '-' WHEN coalesce((CASE WHEN (trim(abaccd) IS NULL) THEN NULL ELSE (length(trim(trim(abaccd))) = 0) END = 1), CAST(0 AS BOOLEAN)) THEN '-' ELSE abaccd END\",\n      \"CASE WHEN ((abadcd IS NULL) = 1) THEN '-' WHEN coalesce((CASE WHEN (trim(abadcd) IS NULL) THEN NULL ELSE (length(trim(trim(abadcd))) = 0) END = 1), CAST(0 AS BOOLEAN)) THEN '-' ELSE abadcd END\",\n      \"CASE WHEN ((ababcd IS NULL) = 1) THEN '-' WHEN coalesce((CASE WHEN (trim(ababcd) IS NULL) THEN NULL ELSE (length(trim(trim(ababcd))) = 0) END = 1), CAST(0 AS BOOLEAN)) THEN '-' ELSE ababcd END\"\n    ]\n  }\n]"
}
-----------------orx_l_formulary_client_xrfe-------------------
{
  "final_table_schema": "{\"client_xrfe_sk\": \"long\", \"client_id\": \"string\", \"client_desc\": \"string\", \"client_acss_cd\": \"short\", \"src_env_sk\": \"long\", \"rec_stat_cd\": \"short\", \"run_id\": \"long\", \"update_uid\": \"string\", \"update_ts\": \"timestamp\", \"insert_uid\": \"string\", \"insert_ts\": \"timestamp\"}",
  "pipeline_name": "orx_l_formulary_client_xrfe",
  "primary_key": "client_id",
  "reformat_rules": "{\n  \"client_xrfe_sk\" : \"-1\",\n  \"client_id\" : \"clientid\",\n  \"client_acss_cd\" : \"CAST(CASE WHEN (client_acss_cd = 'Y') THEN 1 ELSE 0 END AS DECIMAL(38,0))\",\n  \"src_env_sk\" : \"CAST(dxf_src_sys_id AS DECIMAL(38,0))\",\n  \"client_desc\" : \"cidesc\"\n}",
  "source_path": "srcs = [{\n    \"fmt\" : \"query\",\n    \"src\" : \"\"\n}]",
  "source_table": "",
  "target_table": "l_formulary_client_xrfe",
  "sk_service_col": "client_xrfe_sk",
  "read_incremental_files_flag": "false"
}
-----------------ctrx_l_formulary_client_xrfe-------------------
{
  "final_table_schema": "{\"client_xrfe_sk\": \"long\", \"client_id\": \"string\", \"client_desc\": \"string\", \"client_acss_cd\": \"short\", \"src_env_sk\": \"long\", \"rec_stat_cd\": \"short\", \"run_id\": \"long\", \"update_uid\": \"string\", \"update_ts\": \"timestamp\", \"insert_uid\": \"string\", \"insert_ts\": \"timestamp\"}",
  "pipeline_name": "ctrx_l_formulary_client_xrfe",
  "primary_key": "client_id",
  "reformat_rules": "{\n  \"client_xrfe_sk\" : \"-1\",\n  \"client_id\" : \"clientid\",\n  \"client_acss_cd\" : \"CAST(CASE WHEN (client_acss_cd = 'Y') THEN 1 ELSE 0 END AS DECIMAL(38,0))\",\n  \"src_env_sk\" : \"CAST(dxf_src_sys_id AS DECIMAL(38,0))\",\n  \"client_desc\" : \"cidesc\"\n}",
  "source_path": "srcs = [{\n    \"fmt\" : \"query\",\n    \"src\" : \"\"\n}]",
  "source_table": "",
  "target_table": "l_formulary_client_xrfe",
  "sk_service_col": "client_xrfe_sk",
  "read_incremental_files_flag": "false"
}
----------f_saving_acct_pay_dtl----------
{
    "default_source_blank_nulls" : "carrierid, accountid, groupid",
    "final_table_schema" : "{\"cag_sk\": \"long\",\n\"mbr_sk\": \"long\",\n\"claim_nbr\": \"long\",\n\"claim_seq_nbr\": \"int\",\n\"reprocess_chk_nbr\": \"string\",\n\"reprocess_claim_seq\": \"int\",\n\"reprocess_posted_dt\": \"date\",\n\"reprocess_pay_nbr\": \"string\",\n\"oth_payer_pay_amt\": \"decimal(9, 2)\",\n\"pay_phr_flg\": \"string\",\n\"sav_acct_subtype_id\": \"string\",\n\"mbr_pay_amt\": \"decimal(9, 2)\",\n\"pay_amt\": \"decimal(9, 2)\",\n\"reprocess_pat_pay_amt\": \"decimal(9, 2)\",\n\"reprocess_user\": \"string\",\n\"reprocess_dt\": \"date\",\n\"extract_flg\": \"string\",\n\"financial_fld_applied_ind\": \"string\",\n\"payment_sys_ind\": \"string\",\n\"rxclaim_src\": \"string\",\n\"pos_rebate_amt\": \"decimal(15, 2)\",\n\"sav_acct_id\": \"string\",\n\"pos_id\": \"string\",\n\"adjustment_seq\": \"int\",\n\"adjustment_typ\": \"string\",\n\"pos_financial_field_applied\": \"string\",\n\"pos_financial_field_applied_desc\": \"string\",\n\"src_insert_uid\": \"string\",\n\"src_insert_dt\": \"date\",\n\"src_insert_tm\": \"timestamp\",\n\"src_insert_prog_nm\": \"string\",\n\"src_update_uid\": \"string\",\n\"src_update_dt\": \"date\",\n\"src_update_tm\": \"timestamp\",\n\"src_update_prog_nm\": \"string\",\n\"src_env_sk\": \"long\",\n\"claim_stat_id\": \"string\",\n\"adj_prim_liab\": \"decimal(9, 2)\",\n\"adj_sec_diff\": \"decimal(9, 2)\",\n\"claim_nbr_encrp\": \"long\",\n\"rec_stat_cd\": \"short\",\n\"run_id\": \"long\",\n\"update_uid\": \"string\",\n\"update_ts\": \"timestamp\",\n\"insert_uid\": \"string\",\n\"insert_ts\": \"timestamp\"}",
    "pipeline_name" : "f_saving_acct_pay_dtl",
    "primary_key" : "",
    "reformat_rules" : "{\n  \"mbr_pay_amt\" : \"CAST(CASE WHEN array_contains(array('X', 'Z'), claimsts) THEN (-1 * CAST(asf1qu AS DECIMAL(11,2))) ELSE CAST(asf1qu AS DECIMAL(11,2)) END AS STRING)\",\n  \"adj_sec_diff\" : \"CAST(CASE WHEN array_contains(array('X', 'Z'), claimsts) THEN (-1 * CAST(asx0qv AS DECIMAL(11,2))) ELSE CAST(asx0qv AS DECIMAL(11,2)) END AS STRING)\",\n  \"reprocess_posted_dt\" : \"coalesce(CASE WHEN (array_contains(array(3, 4, 5, 6, 7), length(trim(CAST(asc9hk AS STRING)))) AND (NOT (to_timestamp(trim(CAST((19000000 + CAST(trim(CAST(asc9hk AS STRING)) AS STRING)) AS STRING)), 'yyyyMMdd') IS NULL))) THEN date_format(to_date(trim(CAST((19000000 + CAST(trim(CAST(asc9hk AS STRING)) AS STRING)) AS STRING)), 'yyyyMMdd'), 'yyyyMMdd') END, CASE WHEN (array_contains(array(8), length(trim(CAST(asc9hk AS STRING)))) AND (NOT (to_timestamp(trim(CAST(asc9hk AS STRING)), 'yyyyMMdd') IS NULL))) THEN date_format(to_date(trim(CAST(asc9hk AS STRING)), 'yyyyMMdd'), 'yyyyMMdd') END, date_format(to_date('19000101', 'yyyyMMdd'), 'yyyyMMdd'))\",\n  \"reprocess_pat_pay_amt\" : \"CAST(CASE WHEN array_contains(array('X', 'Z'), claimsts) THEN (-1 * CAST(asalhy AS DECIMAL(11,2))) ELSE CAST(asalhy AS DECIMAL(11,2)) END AS STRING)\",\n  \"d_mbr\" : \"in1_d_mbr\",\n  \"reprocess_dt\" : \"coalesce(CASE WHEN (array_contains(array(3, 4, 5, 6, 7), length(trim(CAST(asoxhg AS STRING)))) AND (NOT (to_timestamp(trim(CAST((19000000 + CAST(trim(CAST(asoxhg AS STRING)) AS STRING)) AS STRING)), 'yyyyMMdd') IS NULL))) THEN date_format(to_date(trim(CAST((19000000 + CAST(trim(CAST(asoxhg AS STRING)) AS STRING)) AS STRING)), 'yyyyMMdd'), 'yyyyMMdd') END, CASE WHEN (array_contains(array(8), length(trim(CAST(asoxhg AS STRING)))) AND (NOT (to_timestamp(trim(CAST(asoxhg AS STRING)), 'yyyyMMdd') IS NULL))) THEN date_format(to_date(trim(CAST(asoxhg AS STRING)), 'yyyyMMdd'), 'yyyyMMdd') END, date_format(to_date('19000101', 'yyyyMMdd'), 'yyyyMMdd'))\",\n  \"cag_sk\" : \"CAST(-1 AS DECIMAL(38,0))\",\n  \"claim_stat_id\" : \"claimsts\",\n  \"pos_financial_field_applied\" : \"asrih9\",\n  \"src_insert_tm\" : \"coalesce(date_format(to_timestamp(CASE WHEN (CAST(asadtm AS STRING) IS NULL) THEN NULL ELSE CASE WHEN (length(regexp_extract(CAST(asadtm AS STRING), '(-?)([0-9]+(\\\\\\\\.)[0-9]+|[0-9]+|(0\\\\\\\\.)[0-9]+)', 0)) >= 6) THEN regexp_extract(CAST(asadtm AS STRING), '(-?)([0-9]+(\\\\\\\\.)[0-9]+|[0-9]+|(0\\\\\\\\.)[0-9]+)', 0) ELSE lpad(regexp_replace(lpad(regexp_extract(CAST(asadtm AS STRING), '(-?)([0-9]+(\\\\\\\\.)[0-9]+|[0-9]+|(0\\\\\\\\.)[0-9]+)', 0), 6, '0'), '\\\\\\\\-', '', 1), 6, '-') END END, 'HHmmss'), 'HHmmss'), date_format(to_timestamp(CASE WHEN ('0' IS NULL) THEN NULL ELSE CASE WHEN (length(regexp_extract('0', '(-?)([0-9]+(\\\\\\\\.)[0-9]+|[0-9]+|(0\\\\\\\\.)[0-9]+)', 0)) >= 6) THEN regexp_extract('0', '(-?)([0-9]+(\\\\\\\\.)[0-9]+|[0-9]+|(0\\\\\\\\.)[0-9]+)', 0) ELSE lpad(regexp_replace(lpad(regexp_extract('0', '(-?)([0-9]+(\\\\\\\\.)[0-9]+|[0-9]+|(0\\\\\\\\.)[0-9]+)', 0), 6, '0'), '\\\\\\\\-', '', 1), 6, '-') END END, 'HHmmss'), 'HHmmss'))\",\n  \"reprocess_chk_nbr\" : \"asb3hd\",\n  \"claim_nbr_encrp\" : \"CASE WHEN (CAST(CAST(rxclaimnbr AS DECIMAL(17,0)) AS STRING) > 0) THEN CAST(concat(substring(CAST(rxclaimnbr AS STRING), 1, 2), ff3_encrypt_idwdata(CAST(rxclaimnbr AS STRING))) AS STRING) ELSE CAST(concat(substring(CAST(rxclaimnbr AS STRING), 1, 3), ff3_encrypt_idwdata(CASE WHEN (abs(CAST(rxclaimnbr AS STRING)) IS NULL) THEN '0' ELSE CASE WHEN (regexp_extract(abs(CAST(rxclaimnbr AS STRING)), '([1-9][0-9]*(\\\\\\\\.)[0-9 ]+|[1-9][0-9 ]+|[1-9]+|(0\\\\\\\\.)[0-9 ]*[0-9])', 1) = '') THEN '0' ELSE CASE WHEN (instr(substring(abs(CAST(rxclaimnbr AS STRING)), 0, instr_udf(abs(CAST(rxclaimnbr AS STRING)), regexp_extract(abs(CAST(rxclaimnbr AS STRING)), '([1-9][0-9]*(\\\\\\\\.)[0-9 ]+|[1-9][0-9 ]+|[1-9]+|(0\\\\\\\\.)[0-9 ]*[0-9])', 1))), '-') > 0) THEN concat('-', regexp_replace(regexp_extract(abs(CAST(rxclaimnbr AS STRING)), '([1-9][0-9]*(\\\\\\\\.)[0-9 ]+|[1-9][0-9 ]+|[1-9]+|(0\\\\\\\\.)[0-9 ]*[0-9])', 1), '\\\\\\\\s+', '', 1)) ELSE regexp_replace(regexp_extract(abs(CAST(rxclaimnbr AS STRING)), '([1-9][0-9]*(\\\\\\\\.)[0-9 ]+|[1-9][0-9 ]+|[1-9]+|(0\\\\\\\\.)[0-9 ]*[0-9])', 1), '\\\\\\\\s+', '', 1) END END END)) AS STRING) END\",\n  \"adj_prim_liab\" : \"CAST(CASE WHEN array_contains(array('X', 'Z'), claimsts) THEN (-1 * CAST(asxzqv AS DECIMAL(11,2))) ELSE CAST(asxzqv AS DECIMAL(11,2)) END AS STRING)\",\n  \"src_update_tm\" : \"coalesce(date_format(to_timestamp(CASE WHEN (CAST(asabtm AS STRING) IS NULL) THEN NULL ELSE CASE WHEN (length(regexp_extract(CAST(asabtm AS STRING), '(-?)([0-9]+(\\\\\\\\.)[0-9]+|[0-9]+|(0\\\\\\\\.)[0-9]+)', 0)) >= 6) THEN regexp_extract(CAST(asabtm AS STRING), '(-?)([0-9]+(\\\\\\\\.)[0-9]+|[0-9]+|(0\\\\\\\\.)[0-9]+)', 0) ELSE lpad(regexp_replace(lpad(regexp_extract(CAST(asabtm AS STRING), '(-?)([0-9]+(\\\\\\\\.)[0-9]+|[0-9]+|(0\\\\\\\\.)[0-9]+)', 0), 6, '0'), '\\\\\\\\-', '', 1), 6, '-') END END, 'HHmmss'), 'HHmmss'), date_format(to_timestamp(CASE WHEN ('0' IS NULL) THEN NULL ELSE CASE WHEN (length(regexp_extract('0', '(-?)([0-9]+(\\\\\\\\.)[0-9]+|[0-9]+|(0\\\\\\\\.)[0-9]+)', 0)) >= 6) THEN regexp_extract('0', '(-?)([0-9]+(\\\\\\\\.)[0-9]+|[0-9]+|(0\\\\\\\\.)[0-9]+)', 0) ELSE lpad(regexp_replace(lpad(regexp_extract('0', '(-?)([0-9]+(\\\\\\\\.)[0-9]+|[0-9]+|(0\\\\\\\\.)[0-9]+)', 0), 6, '0'), '\\\\\\\\-', '', 1), 6, '-') END END, 'HHmmss'), 'HHmmss'))\",\n  \"reprocess_pay_nbr\" : \"CAST(CAST(asfjhs AS DECIMAL(11,0)) AS STRING)\",\n  \"claim_nbr\" : \"CAST(rxclaimnbr AS DECIMAL(38,0))\",\n  \"pos_id\" : \"asm1ih\",\n  \"claim_seq_nbr\" : \"CASE WHEN (CAST(CAST(clmseqnbr AS DECIMAL(5,0)) AS STRING) < 0) THEN CAST(CAST(clmseqnbr AS DECIMAL(5,0)) AS STRING) ELSE (1000 - CAST(CAST(clmseqnbr AS DECIMAL(5,0)) AS STRING)) END\",\n  \"src_insert_prog_nm\" : \"asalvn\",\n  \"extract_flg\" : \"asukh9\",\n  \"pay_phr_flg\" : \"aso4ic\",\n  \"mbr_sk\" : \"CAST(-1 AS DECIMAL(38,0))\",\n  \"reprocess_user\" : \"asb2io\",\n  \"oth_payer_pay_amt\" : \"CAST(CASE WHEN array_contains(array('X', 'Z'), claimsts) THEN (-1 * CAST(asf2qu AS DECIMAL(11,2))) ELSE CAST(asf2qu AS DECIMAL(11,2)) END AS STRING)\",\n  \"src_insert_dt\" : \"coalesce(CASE WHEN (array_contains(array(3, 4, 5, 6, 7), length(trim(CAST(asc2dt AS STRING)))) AND (NOT (to_timestamp(trim(CAST((19000000 + CAST(trim(CAST(asc2dt AS STRING)) AS STRING)) AS STRING)), 'yyyyMMdd') IS NULL))) THEN date_format(to_date(trim(CAST((19000000 + CAST(trim(CAST(asc2dt AS STRING)) AS STRING)) AS STRING)), 'yyyyMMdd'), 'yyyyMMdd') END, CASE WHEN (array_contains(array(8), length(trim(CAST(asc2dt AS STRING)))) AND (NOT (to_timestamp(trim(CAST(asc2dt AS STRING)), 'yyyyMMdd') IS NULL))) THEN date_format(to_date(trim(CAST(asc2dt AS STRING)), 'yyyyMMdd'), 'yyyyMMdd') END, date_format(to_date('19000101', 'yyyyMMdd'), 'yyyyMMdd'))\",\n  \"pos_financial_field_applied_desc\" : \"CASE WHEN (NOT CAST(CASE WHEN coalesce(((((((asrih9 = '1') = 1) AND ((asrih9 = '4') = 0)) AND ((asrih9 = '5') = 0)) AND ((asrih9 = '6') = 0)) AND ((asrih9 = '7') = 0)), CAST(0 AS BOOLEAN)) THEN CAST(1 AS BOOLEAN) WHEN coalesce(((asrih9 = '1') = 0), CAST(0 AS BOOLEAN)) THEN CASE WHEN coalesce(((((CAST((asrih9 = '4') AS BIGINT) = 1) AND (CAST((asrih9 = '5') AS BIGINT) = 0)) AND (CAST((asrih9 = '6') AS BIGINT) = 0)) AND ((asrih9 = '7') = 0)), CAST(0 AS BOOLEAN)) THEN CAST(1 AS BOOLEAN) WHEN coalesce(((((CAST((asrih9 = '4') AS BIGINT) = 0) AND (CAST((asrih9 = '5') AS BIGINT) = 1)) AND (CAST((asrih9 = '6') AS BIGINT) = 0)) AND ((asrih9 = '7') = 0)), CAST(0 AS BOOLEAN)) THEN CAST(1 AS BOOLEAN) WHEN coalesce(((((CAST((asrih9 = '4') AS BIGINT) = 0) AND (CAST((asrih9 = '5') AS BIGINT) = 0)) AND (CAST((asrih9 = '6') AS BIGINT) = 1)) AND ((asrih9 = '7') = 0)), CAST(0 AS BOOLEAN)) THEN CAST(1 AS BOOLEAN) WHEN coalesce(((((CAST((asrih9 = '4') AS BIGINT) = 0) AND (CAST((asrih9 = '5') AS BIGINT) = 0)) AND (CAST((asrih9 = '6') AS BIGINT) = 0)) AND ((asrih9 = '7') = 1)), CAST(0 AS BOOLEAN)) THEN CAST(1 AS BOOLEAN) ELSE CAST(0 AS BOOLEAN) END ELSE CAST(0 AS BOOLEAN) END AS BOOLEAN)) THEN '-' WHEN coalesce(((((((asrih9 = '1') = 1) AND ((asrih9 = '4') = 0)) AND ((asrih9 = '5') = 0)) AND ((asrih9 = '6') = 0)) AND ((asrih9 = '7') = 0)), CAST(0 AS BOOLEAN)) THEN 'Patient Pay. The financial amount is applied to the patient pay of the claim.' WHEN coalesce(((asrih9 = '1') = 0), CAST(0 AS BOOLEAN)) THEN CASE WHEN coalesce(((((CAST((asrih9 = '4') AS BIGINT) = 1) AND (CAST((asrih9 = '5') AS BIGINT) = 0)) AND (CAST((asrih9 = '6') AS BIGINT) = 0)) AND ((asrih9 = '7') = 0)), CAST(0 AS BOOLEAN)) THEN 'Other Payer Amount' WHEN coalesce(((((CAST((asrih9 = '4') AS BIGINT) = 0) AND (CAST((asrih9 = '5') AS BIGINT) = 1)) AND (CAST((asrih9 = '6') AS BIGINT) = 0)) AND ((asrih9 = '7') = 0)), CAST(0 AS BOOLEAN)) THEN 'Nx Transaction Reorder' WHEN coalesce(((((CAST((asrih9 = '4') AS BIGINT) = 0) AND (CAST((asrih9 = '5') AS BIGINT) = 0)) AND (CAST((asrih9 = '6') AS BIGINT) = 1)) AND ((asrih9 = '7') = 0)), CAST(0 AS BOOLEAN)) THEN 'Client Ingredient Cost' WHEN coalesce(((((CAST((asrih9 = '4') AS BIGINT) = 0) AND (CAST((asrih9 = '5') AS BIGINT) = 0)) AND (CAST((asrih9 = '6') AS BIGINT) = 0)) AND ((asrih9 = '7') = 1)), CAST(0 AS BOOLEAN)) THEN 'Patient Pay (Alternate)' ELSE NULL END ELSE NULL END\",\n  \"reprocess_claim_seq\" : \"CASE WHEN (CAST(CAST(asfihs AS DECIMAL(5,0)) AS STRING) <= 0) THEN CAST(CAST(asfihs AS DECIMAL(5,0)) AS STRING) ELSE (1000 - CAST(CAST(asfihs AS DECIMAL(5,0)) AS STRING)) END\",\n  \"payment_sys_ind\" : \"asrhh9\",\n  \"src_update_prog_nm\" : \"asaevn\",\n  \"adjustment_typ\" : \"asi6h9\",\n  \"financial_fld_applied_ind\" : \"asrih9\",\n  \"sav_acct_id\" : \"asochc\",\n  \"sav_acct_subtype_id\" : \"asokhc\",\n  \"rxclaim_src\" : \"asrgh9\",\n  \"src_insert_uid\" : \"asakvn\",\n  \"pay_amt\" : \"CAST(CASE WHEN array_contains(array('X', 'Z'), claimsts) THEN (-1 * CAST(asamhy AS DECIMAL(11,2))) ELSE CAST(asamhy AS DECIMAL(11,2)) END AS STRING)\",\n  \"d_cg\" : \"in1_d_cg\",\n  \"pos_rebate_amt\" : \"CAST(CASE WHEN array_contains(array('X', 'Z'), claimsts) THEN (-1 * CAST(astshx AS DECIMAL(11,2))) ELSE CAST(astshx AS DECIMAL(11,2)) END AS STRING)\",\n  \"adjustment_seq\" : \"CASE WHEN (CAST(CAST(asd9hs AS DECIMAL(5,0)) AS STRING) < 0) THEN CAST(CAST(asd9hs AS DECIMAL(5,0)) AS STRING) ELSE (1000 - CAST(CAST(asd9hs AS DECIMAL(5,0)) AS STRING)) END\",\n  \"src_update_dt\" : \"coalesce(CASE WHEN (array_contains(array(3, 4, 5, 6, 7), length(trim(CAST(asbmdt AS STRING)))) AND (NOT (to_timestamp(trim(CAST((19000000 + CAST(trim(CAST(asbmdt AS STRING)) AS STRING)) AS STRING)), 'yyyyMMdd') IS NULL))) THEN date_format(to_date(trim(CAST((19000000 + CAST(trim(CAST(asbmdt AS STRING)) AS STRING)) AS STRING)), 'yyyyMMdd'), 'yyyyMMdd') END, CASE WHEN (array_contains(array(8), length(trim(CAST(asbmdt AS STRING)))) AND (NOT (to_timestamp(trim(CAST(asbmdt AS STRING)), 'yyyyMMdd') IS NULL))) THEN date_format(to_date(trim(CAST(asbmdt AS STRING)), 'yyyyMMdd'), 'yyyyMMdd') END, date_format(to_date('19000101', 'yyyyMMdd'), 'yyyyMMdd'))\",\n  \"src_env_sk\" : \"CAST(dxf_src_sys_id AS DECIMAL(38,0))\",\n  \"src_update_uid\" : \"asadvn\"\n}",
    "reformat_rules_join" : "joins = [\n    {\n       \"fmt\": \"table\",\n       \"src\": \"orx_idw_dm_prd.unknown_d_cg\",\n       \"join-cond\": \"in1.carrier_id = in0.carrierid AND in1.account_id = in0.accountid AND in1.employer_group_id = in0.groupid\",\n       \"val-cols\": [\n         \"in1.d_cg as in1_d_cg\"\n       ]\n    },\n    {\n       \"fmt\": \"table\",\n       \"src\": \"orx_idw_dm_prd.unknown_d_mbr\",\n       \"join-cond\": \"in1.carrier_id = in0.carrierid AND in1.account_id = in0.accountid AND in1.employer_group_id = in0.groupid AND in1.mbr_id = in0.memberid\",\n       \"val-cols\": [\n         \"in1.d_mbr as in1_d_mbr\"\n       ]\n    }\n]",
    "source_path" : "srcs = [{\n    \"fmt\" : \"parquet\",\n    \"src\" : \"dbfs:/$PATH/*\"\n}]",
    "source_table" : "",
    "target_table" : ""
}
----------f_saving_acct_pay_dtl_upd----------
{
    "final_table_schema" : "{\"cag_sk\": \"double\",\n\"mbr_sk\": \"double\",\n\"claim_nbr\": \"double\",\n\"claim_seq_nbr\": \"double\",\n\"reprocess_chk_nbr\": \"string\",\n\"reprocess_claim_seq\": \"double\",\n\"reprocess_posted_dt\": \"date\",\n\"reprocess_pay_nbr\": \"string\",\n\"oth_payer_pay_amt\": \"double\",\n\"pay_phr_flg\": \"string\",\n\"sav_acct_subtype_id\": \"string\",\n\"mbr_pay_amt\": \"double\",\n\"pay_amt\": \"double\",\n\"reprocess_pat_pay_amt\": \"double\",\n\"reprocess_user\": \"string\",\n\"reprocess_dt\": \"date\",\n\"extract_flg\": \"string\",\n\"financial_fld_applied_ind\": \"string\",\n\"payment_sys_ind\": \"string\",\n\"rxclaim_src\": \"string\",\n\"pos_rebate_amt\": \"double\",\n\"sav_acct_id\": \"string\",\n\"pos_id\": \"string\",\n\"adjustment_seq\": \"double\",\n\"adjustment_typ\": \"string\",\n\"pos_financial_field_applied\": \"string\",\n\"pos_financial_field_applied_desc\": \"string\",\n\"src_insert_uid\": \"string\",\n\"src_insert_dt\": \"date\",\n\"src_insert_tm\": \"timestamp\",\n\"src_insert_prog_nm\": \"string\",\n\"src_update_uid\": \"string\",\n\"src_update_dt\": \"date\",\n\"src_update_tm\": \"timestamp\",\n\"src_update_prog_nm\": \"string\",\n\"src_env_sk\": \"double\",\n\"claim_stat_id\": \"string\",\n\"adj_prim_liab\": \"double\",\n\"adj_sec_diff\": \"double\",\n\"claim_nbr_encrp\": \"double\",\n\"rec_stat_cd\": \"short\",\n\"run_id\": \"long\",\n\"update_uid\": \"string\",\n\"update_ts\": \"timestamp\",\n\"insert_uid\": \"string\",\n\"insert_ts\": \"timestamp\"}",
    "length_rules" : "CASE WHEN (length(reprocess_chk_nbr) > 9) THEN 'reprocess_chk_nbr' WHEN (length(reprocess_posted_dt) > 8) THEN 'reprocess_posted_dt' WHEN (length(reprocess_pay_nbr) > 9) THEN 'reprocess_pay_nbr' WHEN (length(oth_payer_pay_amt) > 10) THEN 'oth_payer_pay_amt' WHEN (length(pay_phr_flg) > 1) THEN 'pay_phr_flg' WHEN (length(sav_acct_subtype_id) > 10) THEN 'sav_acct_subtype_id' WHEN (length(mbr_pay_amt) > 10) THEN 'mbr_pay_amt' WHEN (length(pay_amt) > 10) THEN 'pay_amt' WHEN (length(reprocess_pat_pay_amt) > 10) THEN 'reprocess_pat_pay_amt' WHEN (length(reprocess_user) > 10) THEN 'reprocess_user' WHEN (length(reprocess_dt) > 8) THEN 'reprocess_dt' WHEN (length(extract_flg) > 1) THEN 'extract_flg' WHEN (length(financial_fld_applied_ind) > 1) THEN 'financial_fld_applied_ind' WHEN (length(payment_sys_ind) > 1) THEN 'payment_sys_ind' WHEN (length(rxclaim_src) > 1) THEN 'rxclaim_src' WHEN (length(pos_rebate_amt) > 16) THEN 'pos_rebate_amt' WHEN (length(sav_acct_id) > 19) THEN 'sav_acct_id' WHEN (length(pos_id) > 10) THEN 'pos_id' WHEN (length(adjustment_typ) > 3) THEN 'adjustment_typ' WHEN (length(pos_financial_field_applied) > 1) THEN 'pos_financial_field_applied' WHEN (length(pos_financial_field_applied_desc) > 100) THEN 'pos_financial_field_applied_desc' WHEN (length(src_insert_uid) > 10) THEN 'src_insert_uid' WHEN (length(src_insert_dt) > 8) THEN 'src_insert_dt' WHEN (length(src_insert_tm) > 15) THEN 'src_insert_tm' WHEN (length(src_insert_prog_nm) > 10) THEN 'src_insert_prog_nm' WHEN (length(src_update_uid) > 10) THEN 'src_update_uid' WHEN (length(src_update_dt) > 8) THEN 'src_update_dt' WHEN (length(src_update_tm) > 15) THEN 'src_update_tm' WHEN (length(src_update_prog_nm) > 10) THEN 'src_update_prog_nm' WHEN (length(claim_stat_id) > 1) THEN 'claim_stat_id' WHEN (length(adj_prim_liab) > 10) THEN 'adj_prim_liab' WHEN (length(adj_sec_diff) > 10) THEN 'adj_sec_diff'  ELSE 'pass' END",
    "pipeline_name" : "orx_f_saving_acct_pay_dtl_upd",
    "primary_key" : "",
    "reformat_rules" : "{\n  \"mbr_pay_amt\" : \"CAST(CAST(asf1qu AS DECIMAL(10,2)) AS STRING)\",\n  \"adj_sec_diff\" : \"CAST(CAST(asx0qv AS DECIMAL(10,2)) AS STRING)\",\n  \"reprocess_posted_dt\" : \"coalesce(CASE WHEN (array_contains(array(3, 4, 5, 6, 7), length(trim(CAST(asc9hk AS STRING)))) AND (NOT (to_timestamp(trim(CAST((19000000 + CAST(trim(CAST(asc9hk AS STRING)) AS STRING)) AS STRING)), 'yyyyMMdd') IS NULL))) THEN date_format(to_date(trim(CAST((19000000 + CAST(trim(CAST(asc9hk AS STRING)) AS STRING)) AS STRING)), 'yyyyMMdd'), 'yyyyMMdd') END, CASE WHEN (array_contains(array(8), length(trim(CAST(asc9hk AS STRING)))) AND (NOT (to_timestamp(trim(CAST(asc9hk AS STRING)), 'yyyyMMdd') IS NULL))) THEN date_format(to_date(trim(CAST(asc9hk AS STRING)), 'yyyyMMdd'), 'yyyyMMdd') END, date_format(to_date('19000101', 'yyyyMMdd'), 'yyyyMMdd'))\",\n  \"reprocess_pat_pay_amt\" : \"CAST(CAST(asalhy AS DECIMAL(10,2)) AS STRING)\",\n  \"reprocess_dt\" : \"coalesce(CASE WHEN (array_contains(array(3, 4, 5, 6, 7), length(trim(CAST(asoxhg AS STRING)))) AND (NOT (to_timestamp(trim(CAST((19000000 + CAST(trim(CAST(asoxhg AS STRING)) AS STRING)) AS STRING)), 'yyyyMMdd') IS NULL))) THEN date_format(to_date(trim(CAST((19000000 + CAST(trim(CAST(asoxhg AS STRING)) AS STRING)) AS STRING)), 'yyyyMMdd'), 'yyyyMMdd') END, CASE WHEN (array_contains(array(8), length(trim(CAST(asoxhg AS STRING)))) AND (NOT (to_timestamp(trim(CAST(asoxhg AS STRING)), 'yyyyMMdd') IS NULL))) THEN date_format(to_date(trim(CAST(asoxhg AS STRING)), 'yyyyMMdd'), 'yyyyMMdd') END, date_format(to_date('19000101', 'yyyyMMdd'), 'yyyyMMdd'))\",\n  \"cag_sk\" : \"CASE WHEN (size(array_union(array(), filter(array(CASE WHEN (NOT isnull(cag_sk0)) THEN cag_sk1 END, CASE WHEN (NOT isnull(cag_sk2)) THEN cag_sk1 END, CASE WHEN (NOT isnull(cag_sk3)) THEN cag_sk1 END, CASE WHEN (NOT isnull(cag_sk4)) THEN cag_sk1 END, CASE WHEN (NOT isnull(cag_sk1)) THEN cag_sk1 END), lambdafunction((NOT isnull(i)), i)))) = 0) THEN NULL ELSE array_union(array(), filter(array(CASE WHEN (NOT isnull(cag_sk0)) THEN cag_sk1 END, CASE WHEN (NOT isnull(cag_sk2)) THEN cag_sk1 END, CASE WHEN (NOT isnull(cag_sk3)) THEN cag_sk1 END, CASE WHEN (NOT isnull(cag_sk4)) THEN cag_sk1 END, CASE WHEN (NOT isnull(cag_sk1)) THEN cag_sk1 END), lambdafunction((NOT isnull(i)), i))) END\",\n  \"claim_stat_id\" : \"CASE WHEN (size(coalesce(array_union(array(), filter(array(CASE WHEN (NOT isnull(claim_stat_id0)) THEN claim_stat_id1 END, CASE WHEN (NOT isnull(claim_stat_id2)) THEN claim_stat_id1 END, CASE WHEN (NOT isnull(claim_stat_id3)) THEN claim_stat_id1 END, CASE WHEN (NOT isnull(claim_stat_id4)) THEN claim_stat_id1 END, CASE WHEN (NOT isnull(claim_stat_id1)) THEN claim_stat_id1 END), lambdafunction((NOT isnull(i)), i))), array())) = 0) THEN NULL ELSE coalesce(array_union(array(), filter(array(CASE WHEN (NOT isnull(claim_stat_id0)) THEN claim_stat_id1 END, CASE WHEN (NOT isnull(claim_stat_id2)) THEN claim_stat_id1 END, CASE WHEN (NOT isnull(claim_stat_id3)) THEN claim_stat_id1 END, CASE WHEN (NOT isnull(claim_stat_id4)) THEN claim_stat_id1 END, CASE WHEN (NOT isnull(claim_stat_id1)) THEN claim_stat_id1 END), lambdafunction((NOT isnull(i)), i))), array()) END\",\n  \"pos_financial_field_applied\" : \"asrih9\",\n  \"src_insert_tm\" : \"coalesce(date_format(to_timestamp(CASE WHEN (CAST(asadtm AS STRING) IS NULL) THEN NULL ELSE CASE WHEN (length(regexp_extract(CAST(asadtm AS STRING), '(-?)([0-9]+(\\\\\\\\.)[0-9]+|[0-9]+|(0\\\\\\\\.)[0-9]+)', 0)) >= 6) THEN regexp_extract(CAST(asadtm AS STRING), '(-?)([0-9]+(\\\\\\\\.)[0-9]+|[0-9]+|(0\\\\\\\\.)[0-9]+)', 0) ELSE lpad(regexp_replace(lpad(regexp_extract(CAST(asadtm AS STRING), '(-?)([0-9]+(\\\\\\\\.)[0-9]+|[0-9]+|(0\\\\\\\\.)[0-9]+)', 0), 6, '0'), '\\\\\\\\-', '', 1), 6, '-') END END, 'HHmmss'), 'HHmmss'), date_format(to_timestamp(CASE WHEN ('0' IS NULL) THEN NULL ELSE CASE WHEN (length(regexp_extract('0', '(-?)([0-9]+(\\\\\\\\.)[0-9]+|[0-9]+|(0\\\\\\\\.)[0-9]+)', 0)) >= 6) THEN regexp_extract('0', '(-?)([0-9]+(\\\\\\\\.)[0-9]+|[0-9]+|(0\\\\\\\\.)[0-9]+)', 0) ELSE lpad(regexp_replace(lpad(regexp_extract('0', '(-?)([0-9]+(\\\\\\\\.)[0-9]+|[0-9]+|(0\\\\\\\\.)[0-9]+)', 0), 6, '0'), '\\\\\\\\-', '', 1), 6, '-') END END, 'HHmmss'), 'HHmmss'))\",\n  \"reprocess_chk_nbr\" : \"asb3hd\",\n  \"claim_nbr_encrp\" : \"CASE WHEN (CAST(CAST(asp2nb AS DECIMAL(17,0)) AS STRING) > 0) THEN CAST(concat(substring(CAST(asp2nb AS STRING), 1, 2), ff3_encrypt_idwdata(CAST(asp2nb AS STRING))) AS STRING) ELSE CAST(concat(substring(CAST(asp2nb AS STRING), 1, 3), ff3_encrypt_idwdata(CASE WHEN (abs(CAST(asp2nb AS STRING)) IS NULL) THEN '0' ELSE CASE WHEN (regexp_extract(abs(CAST(asp2nb AS STRING)), '([1-9][0-9]*(\\\\\\\\.)[0-9 ]+|[1-9][0-9 ]+|[1-9]+|(0\\\\\\\\.)[0-9 ]*[0-9])', 1) = '') THEN '0' ELSE CASE WHEN (instr(substring(abs(CAST(asp2nb AS STRING)), 0, instr_udf(abs(CAST(asp2nb AS STRING)), regexp_extract(abs(CAST(asp2nb AS STRING)), '([1-9][0-9]*(\\\\\\\\.)[0-9 ]+|[1-9][0-9 ]+|[1-9]+|(0\\\\\\\\.)[0-9 ]*[0-9])', 1))), '-') > 0) THEN concat('-', regexp_replace(regexp_extract(abs(CAST(asp2nb AS STRING)), '([1-9][0-9]*(\\\\\\\\.)[0-9 ]+|[1-9][0-9 ]+|[1-9]+|(0\\\\\\\\.)[0-9 ]*[0-9])', 1), '\\\\\\\\s+', '', 1)) ELSE regexp_replace(regexp_extract(abs(CAST(asp2nb AS STRING)), '([1-9][0-9]*(\\\\\\\\.)[0-9 ]+|[1-9][0-9 ]+|[1-9]+|(0\\\\\\\\.)[0-9 ]*[0-9])', 1), '\\\\\\\\s+', '', 1) END END END)) AS STRING) END\",\n  \"adj_prim_liab\" : \"CAST(CAST(asxzqv AS DECIMAL(10,2)) AS STRING)\",\n  \"src_update_tm\" : \"coalesce(date_format(to_timestamp(CASE WHEN (CAST(asabtm AS STRING) IS NULL) THEN NULL ELSE CASE WHEN (length(regexp_extract(CAST(asabtm AS STRING), '(-?)([0-9]+(\\\\\\\\.)[0-9]+|[0-9]+|(0\\\\\\\\.)[0-9]+)', 0)) >= 6) THEN regexp_extract(CAST(asabtm AS STRING), '(-?)([0-9]+(\\\\\\\\.)[0-9]+|[0-9]+|(0\\\\\\\\.)[0-9]+)', 0) ELSE lpad(regexp_replace(lpad(regexp_extract(CAST(asabtm AS STRING), '(-?)([0-9]+(\\\\\\\\.)[0-9]+|[0-9]+|(0\\\\\\\\.)[0-9]+)', 0), 6, '0'), '\\\\\\\\-', '', 1), 6, '-') END END, 'HHmmss'), 'HHmmss'), date_format(to_timestamp(CASE WHEN ('0' IS NULL) THEN NULL ELSE CASE WHEN (length(regexp_extract('0', '(-?)([0-9]+(\\\\\\\\.)[0-9]+|[0-9]+|(0\\\\\\\\.)[0-9]+)', 0)) >= 6) THEN regexp_extract('0', '(-?)([0-9]+(\\\\\\\\.)[0-9]+|[0-9]+|(0\\\\\\\\.)[0-9]+)', 0) ELSE lpad(regexp_replace(lpad(regexp_extract('0', '(-?)([0-9]+(\\\\\\\\.)[0-9]+|[0-9]+|(0\\\\\\\\.)[0-9]+)', 0), 6, '0'), '\\\\\\\\-', '', 1), 6, '-') END END, 'HHmmss'), 'HHmmss'))\",\n  \"reprocess_pay_nbr\" : \"CAST(CAST(asfjhs AS DECIMAL(11,0)) AS STRING)\",\n  \"claim_nbr\" : \"CAST(asp2nb AS DECIMAL(38,0))\",\n  \"pos_id\" : \"asm1ih\",\n  \"claim_seq_nbr\" : \"CASE WHEN (CAST(CAST(asoinb AS DECIMAL(5,0)) AS STRING) < 0) THEN CAST(CAST(asd9hs AS DECIMAL(5,0)) AS STRING) ELSE (1000 - CAST(CAST(asoinb AS DECIMAL(5,0)) AS STRING)) END\",\n  \"src_insert_prog_nm\" : \"asalvn\",\n  \"extract_flg\" : \"asukh9\",\n  \"pay_phr_flg\" : \"aso4ic\",\n  \"mbr_sk\" : \"CASE WHEN (size(array_union(array(), filter(array(CASE WHEN (NOT isnull(mbr_sk0)) THEN mbr_sk1 END, CASE WHEN (NOT isnull(mbr_sk2)) THEN mbr_sk1 END, CASE WHEN (NOT isnull(mbr_sk3)) THEN mbr_sk1 END, CASE WHEN (NOT isnull(mbr_sk4)) THEN mbr_sk1 END, CASE WHEN (NOT isnull(mbr_sk1)) THEN mbr_sk1 END), lambdafunction((NOT isnull(i)), i)))) = 0) THEN NULL ELSE array_union(array(), filter(array(CASE WHEN (NOT isnull(mbr_sk0)) THEN mbr_sk1 END, CASE WHEN (NOT isnull(mbr_sk2)) THEN mbr_sk1 END, CASE WHEN (NOT isnull(mbr_sk3)) THEN mbr_sk1 END, CASE WHEN (NOT isnull(mbr_sk4)) THEN mbr_sk1 END, CASE WHEN (NOT isnull(mbr_sk1)) THEN mbr_sk1 END), lambdafunction((NOT isnull(i)), i))) END\",\n  \"reprocess_user\" : \"asb2io\",\n  \"oth_payer_pay_amt\" : \"CAST(CAST(asf2qu AS DECIMAL(10,2)) AS STRING)\",\n  \"src_insert_dt\" : \"coalesce(CASE WHEN (array_contains(array(3, 4, 5, 6, 7), length(trim(CAST(asc2dt AS STRING)))) AND (NOT (to_timestamp(trim(CAST((19000000 + CAST(trim(CAST(asc2dt AS STRING)) AS STRING)) AS STRING)), 'yyyyMMdd') IS NULL))) THEN date_format(to_date(trim(CAST((19000000 + CAST(trim(CAST(asc2dt AS STRING)) AS STRING)) AS STRING)), 'yyyyMMdd'), 'yyyyMMdd') END, CASE WHEN (array_contains(array(8), length(trim(CAST(asc2dt AS STRING)))) AND (NOT (to_timestamp(trim(CAST(asc2dt AS STRING)), 'yyyyMMdd') IS NULL))) THEN date_format(to_date(trim(CAST(asc2dt AS STRING)), 'yyyyMMdd'), 'yyyyMMdd') END, date_format(to_date('19000101', 'yyyyMMdd'), 'yyyyMMdd'))\",\n  \"pos_financial_field_applied_desc\" : \"CASE WHEN (NOT CAST(CASE WHEN coalesce(((((((asrih9 = '1') = 1) AND ((asrih9 = '4') = 0)) AND ((asrih9 = '5') = 0)) AND ((asrih9 = '6') = 0)) AND ((asrih9 = '7') = 0)), CAST(0 AS BOOLEAN)) THEN CAST(1 AS BOOLEAN) WHEN coalesce(((asrih9 = '1') = 0), CAST(0 AS BOOLEAN)) THEN CASE WHEN coalesce(((((CAST((asrih9 = '4') AS BIGINT) = 1) AND (CAST((asrih9 = '5') AS BIGINT) = 0)) AND (CAST((asrih9 = '6') AS BIGINT) = 0)) AND ((asrih9 = '7') = 0)), CAST(0 AS BOOLEAN)) THEN CAST(1 AS BOOLEAN) WHEN coalesce(((((CAST((asrih9 = '4') AS BIGINT) = 0) AND (CAST((asrih9 = '5') AS BIGINT) = 1)) AND (CAST((asrih9 = '6') AS BIGINT) = 0)) AND ((asrih9 = '7') = 0)), CAST(0 AS BOOLEAN)) THEN CAST(1 AS BOOLEAN) WHEN coalesce(((((CAST((asrih9 = '4') AS BIGINT) = 0) AND (CAST((asrih9 = '5') AS BIGINT) = 0)) AND (CAST((asrih9 = '6') AS BIGINT) = 1)) AND ((asrih9 = '7') = 0)), CAST(0 AS BOOLEAN)) THEN CAST(1 AS BOOLEAN) WHEN coalesce(((((CAST((asrih9 = '4') AS BIGINT) = 0) AND (CAST((asrih9 = '5') AS BIGINT) = 0)) AND (CAST((asrih9 = '6') AS BIGINT) = 0)) AND ((asrih9 = '7') = 1)), CAST(0 AS BOOLEAN)) THEN CAST(1 AS BOOLEAN) ELSE CAST(0 AS BOOLEAN) END ELSE CAST(0 AS BOOLEAN) END AS BOOLEAN)) THEN '-' WHEN coalesce(((((((asrih9 = '1') = 1) AND ((asrih9 = '4') = 0)) AND ((asrih9 = '5') = 0)) AND ((asrih9 = '6') = 0)) AND ((asrih9 = '7') = 0)), CAST(0 AS BOOLEAN)) THEN 'Patient Pay. The financial amount is applied to the patient pay of the claim.' WHEN coalesce(((asrih9 = '1') = 0), CAST(0 AS BOOLEAN)) THEN CASE WHEN coalesce(((((CAST((asrih9 = '4') AS BIGINT) = 1) AND (CAST((asrih9 = '5') AS BIGINT) = 0)) AND (CAST((asrih9 = '6') AS BIGINT) = 0)) AND ((asrih9 = '7') = 0)), CAST(0 AS BOOLEAN)) THEN 'Other Payer Amount' WHEN coalesce(((((CAST((asrih9 = '4') AS BIGINT) = 0) AND (CAST((asrih9 = '5') AS BIGINT) = 1)) AND (CAST((asrih9 = '6') AS BIGINT) = 0)) AND ((asrih9 = '7') = 0)), CAST(0 AS BOOLEAN)) THEN 'Nx Transaction Reorder' WHEN coalesce(((((CAST((asrih9 = '4') AS BIGINT) = 0) AND (CAST((asrih9 = '5') AS BIGINT) = 0)) AND (CAST((asrih9 = '6') AS BIGINT) = 1)) AND ((asrih9 = '7') = 0)), CAST(0 AS BOOLEAN)) THEN 'Client Ingredient Cost' WHEN coalesce(((((CAST((asrih9 = '4') AS BIGINT) = 0) AND (CAST((asrih9 = '5') AS BIGINT) = 0)) AND (CAST((asrih9 = '6') AS BIGINT) = 0)) AND ((asrih9 = '7') = 1)), CAST(0 AS BOOLEAN)) THEN 'Patient Pay (Alternate)' ELSE NULL END ELSE NULL END\",\n  \"reprocess_claim_seq\" : \"CASE WHEN (CAST(CAST(asfihs AS DECIMAL(5,0)) AS STRING) <= 0) THEN CAST(CAST(asfihs AS DECIMAL(5,0)) AS STRING) ELSE (1000 - CAST(CAST(asfihs AS DECIMAL(5,0)) AS STRING)) END\",\n  \"payment_sys_ind\" : \"asrhh9\",\n  \"src_update_prog_nm\" : \"asaevn\",\n  \"adjustment_typ\" : \"asi6h9\",\n  \"financial_fld_applied_ind\" : \"asrih9\",\n  \"sav_acct_id\" : \"asochc\",\n  \"sav_acct_subtype_id\" : \"asokhc\",\n  \"rxclaim_src\" : \"asrgh9\",\n  \"src_insert_uid\" : \"asakvn\",\n  \"pay_amt\" : \"CAST(CAST(asamhy AS DECIMAL(10,2)) AS STRING)\",\n  \"pos_rebate_amt\" : \"CAST(CAST(astshx AS DECIMAL(16,2)) AS STRING)\",\n  \"adjustment_seq\" : \"CASE WHEN (CAST(CAST(asd9hs AS DECIMAL(5,0)) AS STRING) < 0) THEN CAST(CAST(asd9hs AS DECIMAL(5,0)) AS STRING) ELSE (1000 - CAST(CAST(asd9hs AS DECIMAL(5,0)) AS STRING)) END\",\n  \"src_update_dt\" : \"coalesce(CASE WHEN (array_contains(array(3, 4, 5, 6, 7), length(trim(CAST(asbmdt AS STRING)))) AND (NOT (to_timestamp(trim(CAST((19000000 + CAST(trim(CAST(asbmdt AS STRING)) AS STRING)) AS STRING)), 'yyyyMMdd') IS NULL))) THEN date_format(to_date(trim(CAST((19000000 + CAST(trim(CAST(asbmdt AS STRING)) AS STRING)) AS STRING)), 'yyyyMMdd'), 'yyyyMMdd') END, CASE WHEN (array_contains(array(8), length(trim(CAST(asbmdt AS STRING)))) AND (NOT (to_timestamp(trim(CAST(asbmdt AS STRING)), 'yyyyMMdd') IS NULL))) THEN date_format(to_date(trim(CAST(asbmdt AS STRING)), 'yyyyMMdd'), 'yyyyMMdd') END, date_format(to_date('19000101', 'yyyyMMdd'), 'yyyyMMdd'))\",\n  \"src_env_sk\" : \"CAST(dxf_src_sys_id AS DECIMAL(38,0))\",\n  \"src_update_uid\" : \"asadvn\"\n}",
    "reformat_rules_join" : "joins = [\n    {\n       \"fmt\": \"csv\",\n       \"src\": \"/~$AI_SERIAL_LOOKUP/lookup.rxclaim_orx/lookup.rxclaim_orx.rcpd7p_upd.f_claim_transaction.c1.dat\",\n       \"join-cond\": \"in1.claim_nbr = CAST(CAST(in0.asp2nb AS DECIMAL(17,0)) AS STRING) AND in1.claim_seq_nbr = CASE WHEN (CAST(CAST(in0.asoinb AS DECIMAL(5,0)) AS STRING) < 0) THEN CAST(CAST(in0.asd9hs AS DECIMAL(5,0)) AS STRING) ELSE (1000 - CAST(CAST(in0.asoinb AS DECIMAL(5,0)) AS STRING)) END AND in1.claim_stat_id = 'P' AND in1.src_env_sk = CAST(in0.dxf_src_sys_id AS INT)\",\n       \"val-cols\": [\n         \"in1.cag_sk AS cag_sk0\",\n         \"in1.mbr_sk AS mbr_sk0\",\n         \"in1.claim_stat_id AS claim_stat_id0\"\n       ]\n    },\n    {\n       \"fmt\": \"csv\",\n       \"src\": \"/~$AI_SERIAL_LOOKUP/lookup.rxclaim_orx/lookup.rxclaim_orx.rcpd7p_upd.f_claim_transaction.c1.dat\",\n       \"join-cond\": \"in1.claim_nbr = CAST(CAST(in0.asp2nb AS DECIMAL(17,0)) AS STRING) AND in1.claim_seq_nbr = CASE WHEN (CAST(CAST(in0.asoinb AS DECIMAL(5,0)) AS STRING) < 0) THEN CAST(CAST(in0.asd9hs AS DECIMAL(5,0)) AS STRING) ELSE (1000 - CAST(CAST(in0.asoinb AS DECIMAL(5,0)) AS STRING)) END AND in1.claim_stat_id = 'C' AND in1.src_env_sk = CAST(in0.dxf_src_sys_id AS INT)\",\n       \"val-cols\": [\n         \"in1.cag_sk AS cag_sk1\",\n         \"in1.mbr_sk AS mbr_sk1\",\n         \"in1.claim_stat_id AS claim_stat_id1\"\n       ]\n    },\n    {\n       \"fmt\": \"csv\",\n       \"src\": \"/~$AI_SERIAL_LOOKUP/lookup.rxclaim_orx/lookup.rxclaim_orx.rcpd7p_upd.f_claim_transaction.c1.dat\",\n       \"join-cond\": \"in1.claim_nbr = CAST(CAST(in0.asp2nb AS DECIMAL(17,0)) AS STRING) AND in1.claim_seq_nbr = CASE WHEN (CAST(CAST(in0.asoinb AS DECIMAL(5,0)) AS STRING) < 0) THEN CAST(CAST(in0.asd9hs AS DECIMAL(5,0)) AS STRING) ELSE (1000 - CAST(CAST(in0.asoinb AS DECIMAL(5,0)) AS STRING)) END AND in1.claim_stat_id = 'X' AND in1.src_env_sk = CAST(in0.dxf_src_sys_id AS INT)\",\n       \"val-cols\": [\n         \"in1.cag_sk AS cag_sk2\",\n         \"in1.mbr_sk AS mbr_sk2\",\n         \"in1.claim_stat_id AS claim_stat_id2\"\n       ]\n    },\n    {\n       \"fmt\": \"csv\",\n       \"src\": \"/~$AI_SERIAL_LOOKUP/lookup.rxclaim_orx/lookup.rxclaim_orx.rcpd7p_upd.f_claim_transaction.c1.dat\",\n       \"join-cond\": \"in1.claim_nbr = CAST(CAST(in0.asp2nb AS DECIMAL(17,0)) AS STRING) AND in1.claim_seq_nbr = CASE WHEN (CAST(CAST(in0.asoinb AS DECIMAL(5,0)) AS STRING) < 0) THEN CAST(CAST(in0.asd9hs AS DECIMAL(5,0)) AS STRING) ELSE (1000 - CAST(CAST(in0.asoinb AS DECIMAL(5,0)) AS STRING)) END AND in1.claim_stat_id = 'Z' AND in1.src_env_sk = CAST(in0.dxf_src_sys_id AS INT)\",\n       \"val-cols\": [\n         \"in1.cag_sk AS cag_sk3\",\n         \"in1.mbr_sk AS mbr_sk3\",\n         \"in1.claim_stat_id AS claim_stat_id3\"\n       ]\n    },\n    {\n       \"fmt\": \"csv\",\n       \"src\": \"/~$AI_SERIAL_LOOKUP/lookup.rxclaim_orx/lookup.rxclaim_orx.rcpd7p_upd.f_claim_transaction.c1.dat\",\n       \"join-cond\": \"in1.claim_nbr = CAST(CAST(in0.asp2nb AS DECIMAL(17,0)) AS STRING) AND in1.claim_seq_nbr = CASE WHEN (CAST(CAST(in0.asoinb AS DECIMAL(5,0)) AS STRING) < 0) THEN CAST(CAST(in0.asd9hs AS DECIMAL(5,0)) AS STRING) ELSE (1000 - CAST(CAST(in0.asoinb AS DECIMAL(5,0)) AS STRING)) END AND in1.claim_stat_id = 'R' AND in1.src_env_sk = CAST(in0.dxf_src_sys_id AS INT)\",\n       \"val-cols\": [\n         \"in1.cag_sk AS cag_sk4\",\n         \"in1.mbr_sk AS mbr_sk4\",\n         \"in1.claim_stat_id AS claim_stat_id4\"\n       ]\n    }\n]",
    "source_path" : "srcs = [{\n    \"fmt\" : \"parquet\",\n    \"src\" : \"dbfs:/$PATH/*\"\n}]",
    "source_table" : "",
    "target_table" : ""
}


